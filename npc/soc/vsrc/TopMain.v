// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifdef RANDOMIZE_REG_INIT
  `define RANDOMIZE
`endif // RANDOMIZE_REG_INIT

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifdef RANDOMIZE
  `ifdef VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
  `else  // VERILATOR
    `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
  `endif // VERILATOR
`else  // RANDOMIZE
  `define INIT_RANDOM_PROLOG_
`endif // RANDOMIZE

module HazardUnit(	// <stdin>:2:10
  input        io_hu_idu_jump,
               io_hu_idu_branch,
               io_hu_idu_pcPlusSrc,
  input  [4:0] io_hu_idu_rs1,
               io_hu_idu_rs2,
               io_hu_exu_regID_rs1,
               io_hu_exu_regID_rs2,
               io_hu_exu_regID_rd,
  input        io_hu_exu_regWrite,
               io_hu_exu_memtoReg,
               io_hu_lsu_memtoReg,
               io_hu_lsu_regWrite,
  input  [4:0] io_hu_lsu_rd,
  input        io_hu_wbu_regWrite,
  input  [4:0] io_hu_wbu_rd,
  output       io_stallF,
               io_stallD,
               io_flushE,
  output [1:0] io_hu_idu_forwardCtrl_forwardA,
               io_hu_idu_forwardCtrl_forwardB,
               io_hu_exu_forwardCtrl_forwardA,
               io_hu_exu_forwardCtrl_forwardB,
  output       io_hazardDebugIO_stallF,
               io_hazardDebugIO_stallD,
               io_hazardDebugIO_flushE,
  output [1:0] io_hazardDebugIO_hu_exu_ctrl_forwardA,
               io_hazardDebugIO_hu_exu_ctrl_forwardB,
               io_hazardDebugIO_hu_idu_ctrl_forwardA,
               io_hazardDebugIO_hu_idu_ctrl_forwardB);

  wire [1:0] _GEN = (|io_hu_exu_regID_rs1) & io_hu_exu_regID_rs1 == io_hu_lsu_rd & io_hu_lsu_regWrite &
                ~io_hu_lsu_memtoReg ? 2'h1 : {(|io_hu_exu_regID_rs1) & io_hu_exu_regID_rs1 == io_hu_wbu_rd
                & io_hu_wbu_regWrite, 1'h0};	// HazardUnit.scala:45:23, :46:23, :47:44, :48:28, :49:11, :50:48, :56:{23,32}, :58:11, :59:48, :64:48
  wire [1:0] _GEN_0 = (|io_hu_exu_regID_rs2) & io_hu_exu_regID_rs2 == io_hu_lsu_rd & io_hu_lsu_regWrite &
                ~io_hu_lsu_memtoReg ? 2'h1 : {(|io_hu_exu_regID_rs2) & io_hu_exu_regID_rs2 == io_hu_wbu_rd
                & io_hu_wbu_regWrite, 1'h0};	// HazardUnit.scala:48:28, :50:48, :58:11, :59:48, :64:48, :71:23, :72:23, :73:44, :75:11, :76:48, :82:{23,32}, :84:11, :85:48, :90:48
  wire       _branchstall_T_28 = io_hu_idu_rs1 == io_hu_lsu_rd;	// HazardUnit.scala:99:23
  wire [1:0] _GEN_1 = (|io_hu_idu_rs1) & _branchstall_T_28 & io_hu_lsu_regWrite & ~io_hu_lsu_memtoReg ? 2'h1 :
                {(|io_hu_idu_rs1) & io_hu_idu_rs1 == io_hu_wbu_rd & io_hu_wbu_regWrite, 1'h0};	// HazardUnit.scala:48:28, :50:48, :58:11, :59:48, :64:48, :98:23, :99:23, :100:44, :102:11, :103:48, :108:{23,32}, :110:11, :111:48, :115:48
  wire       _branchstall_T_11 = io_hu_idu_rs2 == io_hu_lsu_rd;	// HazardUnit.scala:122:23
  wire [1:0] _GEN_2 = (|io_hu_idu_rs2) & _branchstall_T_11 & io_hu_lsu_regWrite & ~io_hu_lsu_memtoReg ? 2'h1 :
                {(|io_hu_idu_rs2) & io_hu_idu_rs2 == io_hu_wbu_rd & io_hu_wbu_regWrite, 1'h0};	// HazardUnit.scala:48:28, :50:48, :58:11, :59:48, :64:48, :121:23, :122:23, :123:44, :125:11, :126:48, :131:{23,32}, :133:11, :134:48, :138:48
  wire       _lwstall_T = io_hu_exu_regID_rd == io_hu_idu_rs1;	// HazardUnit.scala:151:31
  wire       _lwstall_T_1 = io_hu_exu_regID_rd == io_hu_idu_rs2;	// HazardUnit.scala:151:49
  wire       _io_flushE_T = (_lwstall_T | _lwstall_T_1) & io_hu_exu_memtoReg | io_hu_idu_branch & io_hu_exu_regWrite &
                (_lwstall_T | _lwstall_T_1) | io_hu_idu_branch & io_hu_lsu_memtoReg & (_branchstall_T_28 |
                _branchstall_T_11) | io_hu_idu_pcPlusSrc & io_hu_idu_jump & io_hu_exu_regWrite & _lwstall_T
                | io_hu_idu_pcPlusSrc & io_hu_idu_jump & io_hu_lsu_memtoReg & _branchstall_T_28;	// HazardUnit.scala:99:23, :122:23, :150:25, :151:{31,41,49}, :158:25, :159:41, :168:25, :178:25, :184:{39,58}, :185:30
  assign io_stallF = _io_flushE_T;	// <stdin>:2:10, HazardUnit.scala:185:30
  assign io_stallD = _io_flushE_T;	// <stdin>:2:10, HazardUnit.scala:185:30
  assign io_flushE = _io_flushE_T;	// <stdin>:2:10, HazardUnit.scala:185:30
  assign io_hu_idu_forwardCtrl_forwardA = _GEN_1;	// <stdin>:2:10, HazardUnit.scala:102:11, :103:48, :110:11
  assign io_hu_idu_forwardCtrl_forwardB = _GEN_2;	// <stdin>:2:10, HazardUnit.scala:125:11, :126:48, :133:11
  assign io_hu_exu_forwardCtrl_forwardA = _GEN;	// <stdin>:2:10, HazardUnit.scala:49:11, :50:48, :58:11
  assign io_hu_exu_forwardCtrl_forwardB = _GEN_0;	// <stdin>:2:10, HazardUnit.scala:75:11, :76:48, :84:11
  assign io_hazardDebugIO_stallF = _io_flushE_T;	// <stdin>:2:10, HazardUnit.scala:185:30
  assign io_hazardDebugIO_stallD = _io_flushE_T;	// <stdin>:2:10, HazardUnit.scala:185:30
  assign io_hazardDebugIO_flushE = _io_flushE_T;	// <stdin>:2:10, HazardUnit.scala:185:30
  assign io_hazardDebugIO_hu_exu_ctrl_forwardA = _GEN;	// <stdin>:2:10, HazardUnit.scala:49:11, :50:48, :58:11
  assign io_hazardDebugIO_hu_exu_ctrl_forwardB = _GEN_0;	// <stdin>:2:10, HazardUnit.scala:75:11, :76:48, :84:11
  assign io_hazardDebugIO_hu_idu_ctrl_forwardA = _GEN_1;	// <stdin>:2:10, HazardUnit.scala:102:11, :103:48, :110:11
  assign io_hazardDebugIO_hu_idu_ctrl_forwardB = _GEN_2;	// <stdin>:2:10, HazardUnit.scala:125:11, :126:48, :133:11
endmodule

module IFU(	// <stdin>:141:10
  input  [63:0] ioInternal_iPC,
  input         ioExternal_R_s2mRvalid,
  input  [1:0]  ioExternal_R_s2mRresp,
  input  [63:0] ioExternal_R_s2mRdata,
  output [63:0] ioInternal_oPCPlus4,
  output        ioInternal_oFeedBackPCChange,
  output [31:0] ioInternal_Pipeline_IF2ID_MsgBunlde_instr_instr,
  output [63:0] ioInternal_Pipeline_IF2ID_MsgBunlde_pc_pc,
  output        ioExternal_AR_m2sARvalid,
  output [31:0] ioExternal_AR_m2sARaddr,
  output        ioExternal_R_m2sRready);

  assign ioInternal_oPCPlus4 = ioInternal_iPC + 64'h4;	// <stdin>:141:10, IFU.scala:45:35
  assign ioInternal_oFeedBackPCChange = ioExternal_R_s2mRresp == 2'h0 & ioExternal_R_s2mRvalid;	// <stdin>:141:10, IFU.scala:48:{23,31}
  assign ioInternal_Pipeline_IF2ID_MsgBunlde_instr_instr = ioExternal_R_s2mRdata[31:0];	// <stdin>:141:10, IFU.scala:43:57
  assign ioInternal_Pipeline_IF2ID_MsgBunlde_pc_pc = ioInternal_iPC;	// <stdin>:141:10
  assign ioExternal_AR_m2sARvalid = |ioInternal_iPC;	// <stdin>:141:10, IFU.scala:39:44
  assign ioExternal_AR_m2sARaddr = ioInternal_iPC[31:0];	// <stdin>:141:10, IFU.scala:40:38
  assign ioExternal_R_m2sRready = ioExternal_R_s2mRvalid;	// <stdin>:141:10
endmodule

module InstrDecode(	// <stdin>:164:10
  input  [31:0] io_instrIO_instrIn_instr,
  output [1:0]  io_ctrlFlowIO_ctrl2EXU_aluSrcA,
  output [2:0]  io_ctrlFlowIO_ctrl2EXU_aluSrcB,
  output [5:0]  io_ctrlFlowIO_ctrl2EXU_aluCtrl,
  output        io_ctrlFlowIO_ctrl2WBU_regWrite,
                io_ctrlFlowIO_ctrl2WBU_csrWrite,
                io_ctrlFlowIO_ctrl2WBU_memtoReg,
  output [1:0]  io_ctrlFlowIO_ctrl2LSU_memRW,
  output [2:0]  io_ctrlFlowIO_ctrl2LSU_memWidth,
  output [3:0]  io_ctrlFlowIO_ctrl2IDU_branchCtrl,
  output        io_ctrlFlowIO_ctrl2IDU_branch,
  output [1:0]  io_ctrlFlowIO_ctrl2IDU_jump,
  output        io_ctrlFlowIO_ctrl2IDU_ecall,
                io_ctrlFlowIO_ctrl2IDU_pcPlusSrc,
  output [4:0]  io_instrIO_instrRegID_rs1,
                io_instrIO_instrRegID_rs2,
                io_instrIO_instrRegID_rd,
  output [63:0] io_instrIO_instrRegImm_imm,
  output [11:0] io_instrIO_csrID);

  wire [9:0]  _GEN = {io_instrIO_instrIn_instr[14:12], io_instrIO_instrIn_instr[6:0]};	// Lookup.scala:31:38
  wire        _T_1 = _GEN == 10'h13;	// Lookup.scala:31:38
  wire [15:0] _GEN_0 = {io_instrIO_instrIn_instr[31:26], io_instrIO_instrIn_instr[14:12],
                io_instrIO_instrIn_instr[6:0]};	// Lookup.scala:31:38
  wire        _T_3 = _GEN_0 == 16'h93;	// Lookup.scala:31:38
  wire        _T_5 = _GEN == 10'h113;	// Lookup.scala:31:38
  wire        _T_7 = _GEN == 10'h193;	// Lookup.scala:31:38
  wire        _T_9 = _GEN == 10'h213;	// Lookup.scala:31:38
  wire        _T_11 = _GEN_0 == 16'h293;	// Lookup.scala:31:38
  wire        _T_13 = _GEN_0 == 16'h4293;	// Lookup.scala:31:38
  wire        _T_15 = _GEN == 10'h313;	// Lookup.scala:31:38
  wire        _T_17 = _GEN == 10'h393;	// Lookup.scala:31:38
  wire [16:0] _GEN_1 = {io_instrIO_instrIn_instr[31:25], io_instrIO_instrIn_instr[14:12],
                io_instrIO_instrIn_instr[6:0]};	// Lookup.scala:31:38
  wire        _T_19 = _GEN_1 == 17'h33;	// Lookup.scala:31:38
  wire        _T_21 = _GEN_1 == 17'h8033;	// Lookup.scala:31:38
  wire        _T_23 = _GEN_1 == 17'hB3;	// Lookup.scala:31:38
  wire        _T_25 = _GEN_1 == 17'h133;	// Lookup.scala:31:38
  wire        _T_27 = _GEN_1 == 17'h1B3;	// Lookup.scala:31:38
  wire        _T_29 = _GEN_1 == 17'h233;	// Lookup.scala:31:38
  wire        _T_31 = _GEN_1 == 17'h2B3;	// Lookup.scala:31:38
  wire        _T_33 = _GEN_1 == 17'h333;	// Lookup.scala:31:38
  wire        _T_35 = _GEN_1 == 17'h3B3;	// Lookup.scala:31:38
  wire        _T_37 = io_instrIO_instrIn_instr[6:0] == 7'h37;	// Lookup.scala:31:38
  wire        _T_39 = io_instrIO_instrIn_instr[6:0] == 7'h17;	// Lookup.scala:31:38
  wire        _T_41 = io_instrIO_instrIn_instr[6:0] == 7'h6F;	// Lookup.scala:31:38
  wire        _T_971 = _GEN == 10'h67;	// Lookup.scala:31:38
  wire        _T_45 = _GEN == 10'h63;	// Lookup.scala:31:38
  wire        _T_47 = _GEN == 10'hE3;	// Lookup.scala:31:38
  wire        _T_49 = _GEN == 10'h263;	// Lookup.scala:31:38
  wire        _T_51 = _GEN == 10'h2E3;	// Lookup.scala:31:38
  wire        _T_53 = _GEN == 10'h363;	// Lookup.scala:31:38
  wire        _T_899 = _GEN == 10'h3E3;	// Lookup.scala:31:38
  wire        _T_57 = _GEN == 10'h3;	// Lookup.scala:31:38, :34:39
  wire        _T_59 = _GEN == 10'h83;	// Lookup.scala:31:38
  wire        _T_61 = _GEN == 10'h103;	// Lookup.scala:31:38
  wire        _T_63 = _GEN == 10'h203;	// Lookup.scala:31:38
  wire        _T_65 = _GEN == 10'h283;	// Lookup.scala:31:38
  wire        _T_67 = _GEN == 10'h23;	// Lookup.scala:31:38
  wire        _T_69 = _GEN == 10'hA3;	// Lookup.scala:31:38
  wire        _T_71 = _GEN == 10'h123;	// Lookup.scala:31:38
  wire        _T_73 = _GEN == 10'h1B;	// Lookup.scala:31:38
  wire        _T_75 = _GEN_1 == 17'h9B;	// Lookup.scala:31:38
  wire        _T_77 = _GEN_1 == 17'h29B;	// Lookup.scala:31:38
  wire        _T_79 = _GEN_1 == 17'h829B;	// Lookup.scala:31:38
  wire        _T_81 = _GEN_1 == 17'h3B;	// Lookup.scala:31:38
  wire        _T_83 = _GEN_1 == 17'h803B;	// Lookup.scala:31:38
  wire        _T_85 = _GEN_1 == 17'hBB;	// Lookup.scala:31:38
  wire        _T_87 = _GEN_1 == 17'h2BB;	// Lookup.scala:31:38
  wire        _T_89 = _GEN_1 == 17'h82BB;	// Lookup.scala:31:38
  wire        _T_91 = _GEN == 10'h303;	// Lookup.scala:31:38
  wire        _T_550 = _GEN == 10'h183;	// Lookup.scala:31:38
  wire        _T_95 = _GEN == 10'h1A3;	// Lookup.scala:31:38
  wire        _T_97 = _GEN_1 == 17'h433;	// Lookup.scala:31:38
  wire        _T_99 = _GEN_1 == 17'h4B3;	// Lookup.scala:31:38
  wire        _T_101 = _GEN_1 == 17'h533;	// Lookup.scala:31:38
  wire        _T_103 = _GEN_1 == 17'h5B3;	// Lookup.scala:31:38
  wire        _T_105 = _GEN_1 == 17'h633;	// Lookup.scala:31:38
  wire        _T_107 = _GEN_1 == 17'h6B3;	// Lookup.scala:31:38
  wire        _T_109 = _GEN_1 == 17'h733;	// Lookup.scala:31:38
  wire        _T_111 = _GEN_1 == 17'h7B3;	// Lookup.scala:31:38
  wire        _T_113 = _GEN_1 == 17'h43B;	// Lookup.scala:31:38
  wire        _T_115 = _GEN_1 == 17'h63B;	// Lookup.scala:31:38
  wire        _T_117 = _GEN_1 == 17'h6BB;	// Lookup.scala:31:38
  wire        _T_119 = _GEN_1 == 17'h73B;	// Lookup.scala:31:38
  wire        _T_121 = _GEN_1 == 17'h7BB;	// Lookup.scala:31:38
  wire        _T_123 = _GEN == 10'hF3;	// Lookup.scala:31:38
  wire        _T_125 = _GEN == 10'h173;	// Lookup.scala:31:38
  wire        _T_127 = _GEN == 10'h1F3;	// Lookup.scala:31:38
  wire        _T_129 = _GEN == 10'h2F3;	// Lookup.scala:31:38
  wire        _T_131 = _GEN == 10'h373;	// Lookup.scala:31:38
  wire        _T_464 = _GEN == 10'h3F3;	// Lookup.scala:31:38
  wire        _GEN_2 = _T_97 | _T_99 | _T_101 | _T_103 | _T_105 | _T_107 | _T_109 | _T_111 | _T_113 | _T_115 |
                _T_117 | _T_119 | _T_121;	// Lookup.scala:31:38, :34:39
  wire        _GEN_3 = _T_91 | _T_550;	// Lookup.scala:31:38, :34:39
  wire        _GEN_4 = _T_81 | _T_83 | _T_85 | _T_87 | _T_89;	// Lookup.scala:31:38, :34:39
  wire        _GEN_5 = _T_67 | _T_69 | _T_71;	// Lookup.scala:31:38, :34:39
  wire        _GEN_6 = _T_57 | _T_59 | _T_61 | _T_63 | _T_65;	// Lookup.scala:31:38, :34:39
  wire        _GEN_7 = _T_45 | _T_47 | _T_49 | _T_51 | _T_53 | _T_899;	// Lookup.scala:31:38, :34:39
  wire        _GEN_8 = _T_37 | _T_39;	// Lookup.scala:31:38, :34:39
  wire        _GEN_9 = _T_19 | _T_21 | _T_23 | _T_25 | _T_27 | _T_29 | _T_31 | _T_33 | _T_35;	// Lookup.scala:31:38, :34:39
  wire        _GEN_10 = _T_1 | _T_3 | _T_5 | _T_7 | _T_9 | _T_11 | _T_13 | _T_15 | _T_17;	// Lookup.scala:31:38, :34:39
  wire [31:0] instrType = _GEN_10 ? 32'h1 : _GEN_9 ? 32'h0 : _GEN_8 ? 32'h4 : _T_41 ? 32'h5 : _T_971 ? 32'h1 : _GEN_7
                ? 32'h3 : _GEN_6 ? 32'h1 : _GEN_5 ? 32'h2 : _T_73 | _T_75 | _T_77 | _T_79 ? 32'h1 : _GEN_4
                ? 32'h0 : _GEN_3 ? 32'h1 : _T_95 ? 32'h2 : _GEN_2 ? 32'h0 : _T_123 | _T_125 | _T_127 |
                _T_129 | _T_131 ? 32'h7 : {31'h3, _T_464};	// Lookup.scala:31:38, :34:39
  wire        _GEN_11 = _T_91 | _T_550 | _T_95;	// Lookup.scala:31:38, :34:39
  wire        _GEN_12 = _T_45 | _T_47 | _T_49 | _T_51 | _T_53 | _T_899 | _T_57 | _T_59 | _T_61 | _T_63 | _T_65 |
                _T_67 | _T_69 | _T_71 | _T_73 | _T_75 | _T_77 | _T_79 | _T_81 | _T_83 | _T_85;	// Lookup.scala:31:38, :34:39
  wire        _GEN_13 = _T_87 | _T_89 | _T_91 | _T_550 | _T_95 | _T_97 | _T_99 | _T_101 | _T_103 | _T_105 | _T_107
                | _T_109 | _T_111 | _T_113 | _T_115 | _T_117 | _T_119 | _T_121 | _T_123 | _T_125 | _T_127;	// Lookup.scala:31:38, :34:39
  wire        _GEN_14 = ~_T_67 & ~_T_69;	// Lookup.scala:31:38, :34:39
  wire        _GEN_15 = ~_T_71 & (_T_73 | _T_75 | _T_77 | _T_79 | _T_81 | _T_83 | _T_85 | _T_87 | _T_89 | _T_91 |
                _T_550 | ~_T_95 & (_T_97 | _T_99 | _T_101 | _T_103 | _T_105 | _T_107 | _T_109 | _T_111 |
                _T_113 | _T_115 | _T_117 | _T_119 | _T_121 | _T_123 | _T_125 | _T_127 | _T_129 | _T_131 |
                _T_464));	// Lookup.scala:31:38, :34:39
  wire        _GEN_16 = _T_1 | _T_3 | _T_5 | _T_7 | _T_9 | _T_11 | _T_13 | _T_15 | _T_17 | _T_19 | _T_21;	// Lookup.scala:31:38, :34:39
  wire        _GEN_17 = _T_23 | _T_25 | _T_27 | _T_29 | _T_31 | _T_33 | _T_35 | _T_37 | _T_39 | _T_41 | _T_971 |
                ~_T_45 & ~_T_47 & ~_T_49 & ~_T_51 & ~_T_53 & ~_T_899 & (_T_57 | _T_59 | _T_61 | _T_63 |
                _T_65 | _GEN_14 & _GEN_15);	// Lookup.scala:31:38, :34:39
  wire        _GEN_18 = ~_T_1 & ~_T_3 & ~_T_5 & ~_T_7 & ~_T_9 & ~_T_11 & ~_T_13 & ~_T_15 & ~_T_17 & ~_T_19 & ~_T_21
                & ~_T_23 & ~_T_25 & ~_T_27 & ~_T_29 & ~_T_31 & ~_T_33 & ~_T_35 & ~_T_37 & ~_T_39 & ~_T_41 &
                ~_T_971 & ~_T_45 & ~_T_47 & ~_T_49 & ~_T_51 & ~_T_53 & ~_T_899 & ~_T_57 & ~_T_59 & ~_T_61;	// Lookup.scala:31:38, :34:39
  wire        _GEN_19 = ~_T_63 & ~_T_65 & ~_T_67 & ~_T_69 & ~_T_71 & ~_T_73 & ~_T_75 & ~_T_77 & ~_T_79 & ~_T_81 &
                ~_T_83 & ~_T_85 & ~_T_87 & ~_T_89 & ~_T_91;	// Lookup.scala:31:38, :34:39
  wire        _GEN_20 = ~_T_550 & ~_T_95 & ~_T_97 & ~_T_99 & ~_T_101 & ~_T_103 & ~_T_105 & ~_T_107 & ~_T_109 &
                ~_T_111 & ~_T_113 & ~_T_115 & ~_T_117 & ~_T_119 & ~_T_121 & (_T_123 | _T_125 | _T_127 |
                _T_129 | _T_131 | _T_464);	// Lookup.scala:31:38, :34:39
  wire        _GEN_21 = _GEN_19 & _GEN_20;	// Lookup.scala:34:39
  wire        _GEN_22 = ~_T_29 & ~_T_31 & ~_T_33 & ~_T_35 & ~_T_37 & ~_T_39 & ~_T_41;	// Lookup.scala:31:38, :34:39
  wire        _GEN_23 = ~_T_971 & ~_T_45 & ~_T_47 & ~_T_49 & ~_T_51 & ~_T_53 & ~_T_899 & (_T_57 | _T_59 | _T_61 |
                _T_63 | _T_65 | ~_T_67 & ~_T_69 & ~_T_71 & ~_T_73 & ~_T_75 & ~_T_77 & ~_T_79 & ~_T_81 &
                ~_T_83 & ~_T_85 & ~_T_87 & ~_T_89 & (_T_91 | _T_550));	// Lookup.scala:31:38, :34:39
  wire        _GEN_24 = _T_73 | _T_75 | _T_77 | _T_79 | _T_81 | _T_83 | _T_85 | _T_87 | _T_89;	// Lookup.scala:31:38, :34:39
  wire        jump = ~_T_1 & ~_T_3 & ~_T_5 & ~_T_7 & ~_T_9 & ~_T_11 & ~_T_13 & ~_T_15 & ~_T_17 & ~_T_19 & ~_T_21
                & ~_T_23 & ~_T_25 & ~_T_27 & ~_T_29 & ~_T_31 & ~_T_33 & ~_T_35 & ~_T_37 & ~_T_39 & (_T_41 |
                _T_971);	// Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2EXU_aluSrcA = _T_1 | _T_3 | _T_5 | _T_7 | _T_9 | _T_11 | _T_13 | _T_15 | _T_17 | _T_19 | _T_21 | _T_23 |
                _T_25 | _T_27 | _T_29 | _T_31 | _T_33 | _T_35 ? 2'h0 : _T_37 ? 2'h2 : _T_39 | _T_41 |
                _T_971 ? 2'h1 : _GEN_12 | _GEN_13 ? 2'h0 : _T_129 ? 2'h2 : _T_131 ? 2'h3 : {2{_T_464}};	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2EXU_aluSrcB = _GEN_10 ? 3'h1 : _GEN_9 ? 3'h0 : _GEN_8 ? 3'h1 : _T_41 | _T_971 ? 3'h3 : _GEN_7 ? 3'h0 :
                _T_57 | _T_59 | _T_61 | _T_63 | _T_65 | _T_67 | _T_69 | _T_71 | _T_73 | _T_75 | _T_77 |
                _T_79 ? 3'h1 : _GEN_4 ? 3'h0 : _GEN_11 ? 3'h1 : _GEN_2 ? 3'h0 : _T_123 ? 3'h2 : _T_125 |
                _T_127 ? 3'h5 : {2'h0, _T_129 | _T_131 | _T_464};	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2EXU_aluCtrl = _T_1 ? 6'h0 : _T_3 ? 6'h2 : _T_5 ? 6'h3 : _T_7 ? 6'h4 : _T_9 ? 6'h5 : _T_11 ? 6'h6 : _T_13
                ? 6'h7 : _T_15 ? 6'h8 : _T_17 ? 6'h9 : _T_19 ? 6'h0 : _T_21 ? 6'h1 : _T_23 ? 6'h2 : _T_25 ?
                6'h3 : _T_27 ? 6'h4 : _T_29 ? 6'h5 : _T_31 ? 6'h6 : _T_33 ? 6'h8 : _T_35 ? 6'h9 : _T_37 |
                _T_39 | _T_41 | _T_971 | _T_45 | _T_47 | _T_49 | _T_51 | _T_53 | _T_899 | _T_57 | _T_59 |
                _T_61 | _T_63 | _T_65 | _T_67 | _T_69 | _T_71 ? 6'h0 : _T_73 ? 6'hA : _T_75 ? 6'hC : _T_77
                ? 6'h10 : _T_79 ? 6'h11 : _T_81 ? 6'hA : _T_83 ? 6'hB : _T_85 ? 6'hC : _T_87 ? 6'h10 :
                _T_89 ? 6'h11 : _GEN_11 ? 6'h0 : _T_97 ? 6'h14 : _T_99 ? 6'h15 : _T_101 ? 6'h16 : _T_103 ?
                6'h17 : _T_105 ? 6'h18 : _T_107 ? 6'h19 : _T_109 ? 6'h1A : _T_111 ? 6'h1B : _T_113 ? 6'h1C
                : _T_115 ? 6'h1D : _T_117 ? 6'h1E : _T_119 ? 6'h1F : _T_121 ? 6'h20 : _T_123 ? 6'h0 :
                _T_125 ? 6'h8 : _T_127 ? 6'h21 : _T_129 ? 6'h0 : _T_131 ? 6'h8 : _T_464 ? 6'h21 : 6'h0;	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2WBU_regWrite = _GEN_16 | _GEN_17;	// <stdin>:164:10, Lookup.scala:34:39
  assign io_ctrlFlowIO_ctrl2WBU_csrWrite = _GEN_18 & _GEN_21;	// <stdin>:164:10, Lookup.scala:34:39
  assign io_ctrlFlowIO_ctrl2WBU_memtoReg = ~_T_1 & ~_T_3 & ~_T_5 & ~_T_7 & ~_T_9 & ~_T_11 & ~_T_13 & ~_T_15 & ~_T_17 & ~_T_19 & ~_T_21
                & ~_T_23 & ~_T_25 & ~_T_27 & _GEN_22 & _GEN_23;	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2LSU_memRW = _T_1 | _T_3 | _T_5 | _T_7 | _T_9 | _T_11 | _T_13 | _T_15 | _T_17 | _T_19 | _T_21 | _T_23 |
                _T_25 | _T_27 | _T_29 | _T_31 | _T_33 | _T_35 | _T_37 | _T_39 | _T_41 | _T_971 | _T_45 |
                _T_47 | _T_49 | _T_51 | _T_53 | _T_899 ? 2'h0 : _GEN_6 ? 2'h1 : _GEN_5 ? 2'h2 : _GEN_24 ?
                2'h0 : _GEN_3 ? 2'h1 : {_T_95, 1'h0};	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2LSU_memWidth = _T_1 | _T_3 | _T_5 | _T_7 | _T_9 | _T_11 | _T_13 | _T_15 | _T_17 | _T_19 | _T_21 | _T_23 |
                _T_25 | _T_27 | _T_29 | _T_31 | _T_33 | _T_35 | _T_37 | _T_39 | _T_41 | _T_971 | _T_45 |
                _T_47 | _T_49 | _T_51 | _T_53 | _T_899 | _T_57 ? 3'h0 : _T_59 ? 3'h1 : _T_61 ? 3'h2 : _T_63
                ? 3'h4 : _T_65 ? 3'h5 : _T_67 ? 3'h0 : _T_69 ? 3'h1 : _T_71 ? 3'h2 : _GEN_24 ? 3'h0 : _T_91
                ? 3'h6 : {1'h0, _T_550 ? 2'h3 : {2{_T_95}}};	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2IDU_branchCtrl = {1'h0, _T_1 | _T_3 | _T_5 | _T_7 | _T_9 | _T_11 | _T_13 | _T_15 | _T_17 | _T_19 | _T_21 |
                _T_23 | _T_25 | _T_27 | _T_29 | _T_31 | _T_33 | _T_35 | _T_37 | _T_39 | _T_41 | _T_971 |
                _T_45 ? 3'h0 : _T_47 ? 3'h1 : _T_49 ? 3'h4 : _T_51 ? 3'h5 : _T_53 ? 3'h6 : {3{_T_899}}};	// <stdin>:164:10, InstrDecode.scala:47:49, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2IDU_branch = ~_T_1 & ~_T_3 & ~_T_5 & ~_T_7 & ~_T_9 & ~_T_11 & ~_T_13 & ~_T_15 & ~_T_17 & ~_T_19 & ~_T_21
                & ~_T_23 & ~_T_25 & ~_T_27 & ~_T_29 & ~_T_31 & ~_T_33 & ~_T_35 & ~_T_37 & ~_T_39 & ~_T_41 &
                ~_T_971 & (_T_45 | _T_47 | _T_49 | _T_51 | _T_53 | _T_899);	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_ctrlFlowIO_ctrl2IDU_jump = {1'h0, jump};	// <stdin>:164:10, InstrDecode.scala:49:57, Lookup.scala:34:39
  assign io_ctrlFlowIO_ctrl2IDU_ecall = io_instrIO_instrIn_instr == 32'h73;	// <stdin>:164:10, InstrDecode.scala:20:47
  assign io_ctrlFlowIO_ctrl2IDU_pcPlusSrc = ~_T_1 & ~_T_3 & ~_T_5 & ~_T_7 & ~_T_9 & ~_T_11 & ~_T_13 & ~_T_15 & ~_T_17 & ~_T_19 & ~_T_21
                & ~_T_23 & ~_T_25 & ~_T_27 & ~_T_29 & ~_T_31 & ~_T_33 & ~_T_35 & ~_T_37 & ~_T_39 & ~_T_41 &
                _T_971;	// <stdin>:164:10, Lookup.scala:31:38, :34:39
  assign io_instrIO_instrRegID_rs1 = io_instrIO_instrIn_instr[19:15];	// <stdin>:164:10, InstrDecode.scala:22:49
  assign io_instrIO_instrRegID_rs2 = io_instrIO_instrIn_instr[24:20];	// <stdin>:164:10, InstrDecode.scala:23:49
  assign io_instrIO_instrRegID_rd = io_instrIO_instrIn_instr[11:7];	// <stdin>:164:10, InstrDecode.scala:24:49
  assign io_instrIO_instrRegImm_imm = instrType == 32'h7 ? {59'h0, io_instrIO_instrIn_instr[19:15]} : instrType == 32'h5 ?
                {{44{io_instrIO_instrIn_instr[31]}}, io_instrIO_instrIn_instr[19:12],
                io_instrIO_instrIn_instr[20], io_instrIO_instrIn_instr[30:21], 1'h0} : instrType == 32'h4 ?
                {{32{io_instrIO_instrIn_instr[31]}}, io_instrIO_instrIn_instr[31:12], 12'h0} : instrType ==
                32'h3 ? {{52{io_instrIO_instrIn_instr[31]}}, io_instrIO_instrIn_instr[7],
                io_instrIO_instrIn_instr[30:25], io_instrIO_instrIn_instr[11:8], 1'h0} : instrType == 32'h2
                ? {{52{io_instrIO_instrIn_instr[31]}}, io_instrIO_instrIn_instr[31:25],
                io_instrIO_instrIn_instr[11:7]} : instrType == 32'h1 ? {{52{io_instrIO_instrIn_instr[31]}},
                io_instrIO_instrIn_instr[31:20]} : 64'h0;	// <stdin>:164:10, BitUtils.scala:9:24, Bitwise.scala:77:12, Cat.scala:33:92, InstrDecode.scala:22:49, :24:49, :25:57, :31:61, :32:{61,72,82,97}, :33:61, :34:{72,87,98}, Lookup.scala:34:39, Mux.scala:81:{58,61}
  assign io_instrIO_csrID = io_instrIO_instrIn_instr[31:20];	// <stdin>:164:10, InstrDecode.scala:25:57
endmodule

module RegisterFile(	// <stdin>:1255:10
  input         clock,
  input  [4:0]  io_instrRegID_rs1,
                io_instrRegID_rs2,
                io_instrRegID_rd,
  input  [63:0] io_wdata,
  input         io_wen,
  output [63:0] io_regData_rd1,
                io_regData_rd2,
                gpr_zero,
                gpr_ra,
                gpr_sp,
                gpr_gp,
                gpr_tp,
                gpr_t0,
                gpr_t1,
                gpr_t2,
                gpr_s0,
                gpr_s1,
                gpr_a0,
                gpr_a1,
                gpr_a2,
                gpr_a3,
                gpr_a4,
                gpr_a5,
                gpr_a6,
                gpr_a7,
                gpr_s2,
                gpr_s3,
                gpr_s4,
                gpr_s5,
                gpr_s6,
                gpr_s7,
                gpr_s8,
                gpr_s9,
                gpr_s10,
                gpr_s11,
                gpr_t3,
                gpr_t4,
                gpr_t5,
                gpr_t6);

  reg  [63:0]       regs_0;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_1;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_2;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_3;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_4;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_5;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_6;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_7;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_8;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_9;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_10;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_11;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_12;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_13;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_14;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_15;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_16;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_17;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_18;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_19;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_20;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_21;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_22;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_23;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_24;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_25;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_26;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_27;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_28;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_29;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_30;	// RegisterFile.scala:13:23
  reg  [63:0]       regs_31;	// RegisterFile.scala:13:23
  wire [31:0][63:0] _GEN = {{regs_31}, {regs_30}, {regs_29}, {regs_28}, {regs_27}, {regs_26}, {regs_25}, {regs_24},
                {regs_23}, {regs_22}, {regs_21}, {regs_20}, {regs_19}, {regs_18}, {regs_17}, {regs_16},
                {regs_15}, {regs_14}, {regs_13}, {regs_12}, {regs_11}, {regs_10}, {regs_9}, {regs_8},
                {regs_7}, {regs_6}, {regs_5}, {regs_4}, {regs_3}, {regs_2}, {regs_1}, {regs_0}};	// RegisterFile.scala:13:23, :52:30
  wire [63:0]       _GEN_0;	// RegisterFile.scala:52:30
  /* synopsys infer_mux_override */
  assign _GEN_0 = _GEN[io_instrRegID_rs1] /* cadence map_to_mux */;	// RegisterFile.scala:52:30
  wire [63:0]       _GEN_1;	// RegisterFile.scala:53:30
  /* synopsys infer_mux_override */
  assign _GEN_1 = _GEN[io_instrRegID_rs2] /* cadence map_to_mux */;	// RegisterFile.scala:52:30, :53:30
  always @(posedge clock) begin
    automatic logic _T_1 = io_wen & (|io_instrRegID_rd);	// RegisterFile.scala:15:{22,43}
    if (_T_1 & io_instrRegID_rd == 5'h0)	// RegisterFile.scala:13:23, :15:{22,43,53}, :16:41
      regs_0 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h1)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_1 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h2)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_2 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h3)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_3 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h4)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_4 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h5)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_5 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h6)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_6 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h7)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_7 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h8)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_8 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h9)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_9 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'hA)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_10 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'hB)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_11 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'hC)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_12 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'hD)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_13 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'hE)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_14 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'hF)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_15 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h10)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_16 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h11)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_17 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h12)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_18 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h13)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_19 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h14)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_20 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h15)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_21 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h16)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_22 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h17)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_23 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h18)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_24 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h19)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_25 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h1A)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_26 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h1B)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_27 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h1C)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_28 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h1D)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_29 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & io_instrRegID_rd == 5'h1E)	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_30 <= io_wdata;	// RegisterFile.scala:13:23
    if (_T_1 & (&io_instrRegID_rd))	// RegisterFile.scala:13:23, :15:{22,53}, :16:41
      regs_31 <= io_wdata;	// RegisterFile.scala:13:23
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1255:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1255:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1255:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_12;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_13;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_14;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_15;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_16;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_17;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_18;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_19;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_20;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_21;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_22;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_23;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_24;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_25;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_26;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_27;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_28;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_29;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_30;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_31;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_32;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_33;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_34;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_35;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_36;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_37;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_38;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_39;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_40;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_41;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_42;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_43;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_44;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_45;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_46;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_47;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_48;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_49;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_50;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_51;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_52;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_53;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_54;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_55;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_56;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_57;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_58;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_59;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_60;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_61;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_62;	// <stdin>:1255:10
      automatic logic [31:0] _RANDOM_63;	// <stdin>:1255:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1255:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1255:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1255:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_7 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_8 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_9 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_10 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_11 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_12 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_13 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_14 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_15 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_16 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_17 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_18 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_19 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_20 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_21 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_22 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_23 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_24 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_25 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_26 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_27 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_28 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_29 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_30 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_31 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_32 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_33 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_34 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_35 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_36 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_37 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_38 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_39 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_40 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_41 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_42 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_43 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_44 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_45 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_46 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_47 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_48 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_49 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_50 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_51 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_52 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_53 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_54 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_55 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_56 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_57 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_58 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_59 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_60 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_61 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_62 = `RANDOM;	// <stdin>:1255:10
        _RANDOM_63 = `RANDOM;	// <stdin>:1255:10
        regs_0 = {_RANDOM_0, _RANDOM_1};	// RegisterFile.scala:13:23
        regs_1 = {_RANDOM_2, _RANDOM_3};	// RegisterFile.scala:13:23
        regs_2 = {_RANDOM_4, _RANDOM_5};	// RegisterFile.scala:13:23
        regs_3 = {_RANDOM_6, _RANDOM_7};	// RegisterFile.scala:13:23
        regs_4 = {_RANDOM_8, _RANDOM_9};	// RegisterFile.scala:13:23
        regs_5 = {_RANDOM_10, _RANDOM_11};	// RegisterFile.scala:13:23
        regs_6 = {_RANDOM_12, _RANDOM_13};	// RegisterFile.scala:13:23
        regs_7 = {_RANDOM_14, _RANDOM_15};	// RegisterFile.scala:13:23
        regs_8 = {_RANDOM_16, _RANDOM_17};	// RegisterFile.scala:13:23
        regs_9 = {_RANDOM_18, _RANDOM_19};	// RegisterFile.scala:13:23
        regs_10 = {_RANDOM_20, _RANDOM_21};	// RegisterFile.scala:13:23
        regs_11 = {_RANDOM_22, _RANDOM_23};	// RegisterFile.scala:13:23
        regs_12 = {_RANDOM_24, _RANDOM_25};	// RegisterFile.scala:13:23
        regs_13 = {_RANDOM_26, _RANDOM_27};	// RegisterFile.scala:13:23
        regs_14 = {_RANDOM_28, _RANDOM_29};	// RegisterFile.scala:13:23
        regs_15 = {_RANDOM_30, _RANDOM_31};	// RegisterFile.scala:13:23
        regs_16 = {_RANDOM_32, _RANDOM_33};	// RegisterFile.scala:13:23
        regs_17 = {_RANDOM_34, _RANDOM_35};	// RegisterFile.scala:13:23
        regs_18 = {_RANDOM_36, _RANDOM_37};	// RegisterFile.scala:13:23
        regs_19 = {_RANDOM_38, _RANDOM_39};	// RegisterFile.scala:13:23
        regs_20 = {_RANDOM_40, _RANDOM_41};	// RegisterFile.scala:13:23
        regs_21 = {_RANDOM_42, _RANDOM_43};	// RegisterFile.scala:13:23
        regs_22 = {_RANDOM_44, _RANDOM_45};	// RegisterFile.scala:13:23
        regs_23 = {_RANDOM_46, _RANDOM_47};	// RegisterFile.scala:13:23
        regs_24 = {_RANDOM_48, _RANDOM_49};	// RegisterFile.scala:13:23
        regs_25 = {_RANDOM_50, _RANDOM_51};	// RegisterFile.scala:13:23
        regs_26 = {_RANDOM_52, _RANDOM_53};	// RegisterFile.scala:13:23
        regs_27 = {_RANDOM_54, _RANDOM_55};	// RegisterFile.scala:13:23
        regs_28 = {_RANDOM_56, _RANDOM_57};	// RegisterFile.scala:13:23
        regs_29 = {_RANDOM_58, _RANDOM_59};	// RegisterFile.scala:13:23
        regs_30 = {_RANDOM_60, _RANDOM_61};	// RegisterFile.scala:13:23
        regs_31 = {_RANDOM_62, _RANDOM_63};	// RegisterFile.scala:13:23
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1255:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1255:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_regData_rd1 = io_instrRegID_rs1 == 5'h0 ? 64'h0 : _GEN_0;	// <stdin>:1255:10, RegisterFile.scala:15:43, :52:{30,49}
  assign io_regData_rd2 = io_instrRegID_rs2 == 5'h0 ? 64'h0 : _GEN_1;	// <stdin>:1255:10, RegisterFile.scala:15:43, :52:30, :53:{30,49}
  assign gpr_zero = regs_0;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_ra = regs_1;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_sp = regs_2;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_gp = regs_3;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_tp = regs_4;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_t0 = regs_5;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_t1 = regs_6;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_t2 = regs_7;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s0 = regs_8;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s1 = regs_9;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a0 = regs_10;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a1 = regs_11;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a2 = regs_12;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a3 = regs_13;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a4 = regs_14;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a5 = regs_15;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a6 = regs_16;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_a7 = regs_17;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s2 = regs_18;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s3 = regs_19;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s4 = regs_20;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s5 = regs_21;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s6 = regs_22;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s7 = regs_23;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s8 = regs_24;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s9 = regs_25;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s10 = regs_26;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_s11 = regs_27;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_t3 = regs_28;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_t4 = regs_29;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_t5 = regs_30;	// <stdin>:1255:10, RegisterFile.scala:13:23
  assign gpr_t6 = regs_31;	// <stdin>:1255:10, RegisterFile.scala:13:23
endmodule

module CSRFile(	// <stdin>:1306:10
  input         clock,
  input  [11:0] io_csrDst,
                io_csrSrc,
  input  [63:0] io_wdata,
  input         io_wen,
                io_ecall,
  output [63:0] io_csrData,
                io_mepc,
                csrDebug_mstatus,
                csrDebug_mtvec,
                csrDebug_mepc,
                csrDebug_mcause);

  reg [63:0] mstatus;	// CSRFile.scala:13:26
  reg [63:0] mtvec;	// CSRFile.scala:14:30
  reg [63:0] mepc;	// CSRFile.scala:15:30
  reg [63:0] mcause;	// CSRFile.scala:16:30
  always @(posedge clock) begin
    automatic logic _T;	// CSRFile.scala:23:32
    automatic logic _T_1 = io_csrDst == 12'h305;	// CSRFile.scala:25:38
    automatic logic _T_2 = io_csrDst == 12'h341;	// CSRFile.scala:27:38
    _T = io_csrDst == 12'h300;	// CSRFile.scala:23:32
    if (io_ecall)
      mstatus <= 64'hA0001800;	// <stdin>:1306:10, CSRFile.scala:13:26
    else if (io_wen & _T)	// CSRFile.scala:13:26, :22:29, :23:{32,48}
      mstatus <= io_wdata;	// CSRFile.scala:13:26
    if (io_ecall | ~io_wen | _T | ~_T_1) begin	// CSRFile.scala:14:30, :20:24, :22:29, :23:{32,48}, :25:{38,52}
    end
    else	// CSRFile.scala:14:30, :20:24, :22:29, :23:{32,48}, :25:{38,52}
      mtvec <= io_wdata;	// CSRFile.scala:14:30
    if (io_ecall | ~io_wen | _T | _T_1 | ~_T_2) begin	// CSRFile.scala:14:30, :15:30, :20:24, :22:29, :23:{32,48}, :25:{38,52}, :27:{38,51}
    end
    else	// CSRFile.scala:14:30, :15:30, :20:24, :22:29, :23:{32,48}, :25:{38,52}, :27:{38,51}
      mepc <= io_wdata;	// CSRFile.scala:15:30
    if (io_ecall | ~io_wen | _T | _T_1 | _T_2 | io_csrDst != 12'h342) begin	// CSRFile.scala:14:30, :16:30, :20:24, :22:29, :23:{32,48}, :25:38, :27:38, :29:38
    end
    else	// CSRFile.scala:14:30, :16:30, :20:24, :22:29, :23:{32,48}, :25:38, :27:38, :29:38
      mcause <= io_wdata;	// CSRFile.scala:16:30
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1306:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1306:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1306:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1306:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:1306:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1306:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1306:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1306:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1306:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1306:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1306:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1306:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1306:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1306:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1306:10
        _RANDOM_7 = `RANDOM;	// <stdin>:1306:10
        mstatus = {_RANDOM_0, _RANDOM_1};	// CSRFile.scala:13:26
        mtvec = {_RANDOM_2, _RANDOM_3};	// CSRFile.scala:14:30
        mepc = {_RANDOM_4, _RANDOM_5};	// CSRFile.scala:15:30
        mcause = {_RANDOM_6, _RANDOM_7};	// CSRFile.scala:16:30
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1306:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1306:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_csrData = io_csrSrc == 12'h342 ? mcause : io_csrSrc == 12'h341 ? mepc : io_csrSrc == 12'h305 ? mtvec
                : io_csrSrc == 12'h300 ? mstatus : 64'h0;	// <stdin>:1306:10, CSRFile.scala:13:26, :14:30, :15:30, :16:30, :23:32, :25:38, :27:38, :29:38, Mux.scala:81:{58,61}
  assign io_mepc = mepc;	// <stdin>:1306:10, CSRFile.scala:15:30
  assign csrDebug_mstatus = mstatus;	// <stdin>:1306:10, CSRFile.scala:13:26
  assign csrDebug_mtvec = mtvec;	// <stdin>:1306:10, CSRFile.scala:14:30
  assign csrDebug_mepc = mepc;	// <stdin>:1306:10, CSRFile.scala:15:30
  assign csrDebug_mcause = mcause;	// <stdin>:1306:10, CSRFile.scala:16:30
endmodule

module BRU(	// <stdin>:1355:10
  input  [63:0] io_srcA,
                io_srcB,
  input  [5:0]  io_ctrl,
  output        io_outC);

  assign io_outC = io_ctrl == 6'h7 ? io_srcA >= io_srcB : io_ctrl == 6'h6 ? io_srcA < io_srcB : io_ctrl ==
                6'h5 ? $signed(io_srcA) >= $signed(io_srcB) : io_ctrl == 6'h4 ? $signed(io_srcA) <
                $signed(io_srcB) : io_ctrl == 6'h1 ? io_srcA != io_srcB : io_ctrl == 6'h0 & io_srcA ==
                io_srcB;	// <stdin>:1355:10, BRU.scala:16:50, :17:50, :18:51, :19:51, :20:51, :21:51, Mux.scala:81:{58,61}
endmodule

module IDU(	// <stdin>:1394:10
  input         clock,
  input  [31:0] io_if_id_IO_instr_instr,
  input  [63:0] io_if_id_IO_pc_pc,
  input  [1:0]  io_hu_idu_forwardCtrl_forwardA,
                io_hu_idu_forwardCtrl_forwardB,
  input  [63:0] io_forwardDataM,
                io_wb_data,
  input  [4:0]  io_wb_rd,
  input  [11:0] io_wb_csrID,
  input         io_wb_regWrite,
                io_wb_csrWrite,
  output [63:0] io_id_ex_IO_pc_pc,
  output [4:0]  io_id_ex_IO_instrRegID_rs1,
                io_id_ex_IO_instrRegID_rs2,
                io_id_ex_IO_instrRegID_rd,
  output [63:0] io_id_ex_IO_instrRegImm_imm,
                io_id_ex_IO_regData_rd1,
                io_id_ex_IO_regData_rd2,
  output [1:0]  io_id_ex_IO_ctrl2EXU_aluSrcA,
  output [2:0]  io_id_ex_IO_ctrl2EXU_aluSrcB,
  output [5:0]  io_id_ex_IO_ctrl2EXU_aluCtrl,
  output        io_id_ex_IO_ctrl2WBU_regWrite,
                io_id_ex_IO_ctrl2WBU_csrWrite,
                io_id_ex_IO_ctrl2WBU_memtoReg,
  output [1:0]  io_id_ex_IO_ctrl2LSU_memRW,
  output [2:0]  io_id_ex_IO_ctrl2LSU_memWidth,
  output [11:0] io_id_ex_IO_csrID,
  output [63:0] io_id_ex_IO_csrData,
  output [31:0] io_id_ex_IO_instr_instr,
  output        io_hu_idu_jump,
                io_hu_idu_branch,
                io_hu_idu_pcPlusSrc,
  output [4:0]  io_hu_idu_rs1,
                io_hu_idu_rs2,
  output [63:0] io_npc_pc,
                io_mepc,
  output        io_pcSrc,
  output [63:0] io_gpr_zero,
                io_gpr_ra,
                io_gpr_sp,
                io_gpr_gp,
                io_gpr_tp,
                io_gpr_t0,
                io_gpr_t1,
                io_gpr_t2,
                io_gpr_s0,
                io_gpr_s1,
                io_gpr_a0,
                io_gpr_a1,
                io_gpr_a2,
                io_gpr_a3,
                io_gpr_a4,
                io_gpr_a5,
                io_gpr_a6,
                io_gpr_a7,
                io_gpr_s2,
                io_gpr_s3,
                io_gpr_s4,
                io_gpr_s5,
                io_gpr_s6,
                io_gpr_s7,
                io_gpr_s8,
                io_gpr_s9,
                io_gpr_s10,
                io_gpr_s11,
                io_gpr_t3,
                io_gpr_t4,
                io_gpr_t5,
                io_gpr_t6,
                io_csrDebug_mstatus,
                io_csrDebug_mtvec,
                io_csrDebug_mepc,
                io_csrDebug_mcause,
  output [1:0]  io_instr_jump,
  output        io_instr_branch,
                io_instr_pcPlusSrc,
  output [63:0] io_bruSrcA,
                io_bruSrcB,
  output        io_bruOutC,
  output [3:0]  io_bruCtrl);

  wire             _bru_io_outC;	// IDU.scala:36:21
  wire [63:0]      _rf_io_regData_rd1;	// IDU.scala:34:20
  wire [63:0]      _rf_io_regData_rd2;	// IDU.scala:34:20
  wire [3:0]       _id_io_ctrlFlowIO_ctrl2IDU_branchCtrl;	// IDU.scala:33:20
  wire             _id_io_ctrlFlowIO_ctrl2IDU_branch;	// IDU.scala:33:20
  wire [1:0]       _id_io_ctrlFlowIO_ctrl2IDU_jump;	// IDU.scala:33:20
  wire             _id_io_ctrlFlowIO_ctrl2IDU_ecall;	// IDU.scala:33:20
  wire             _id_io_ctrlFlowIO_ctrl2IDU_pcPlusSrc;	// IDU.scala:33:20
  wire [4:0]       _id_io_instrIO_instrRegID_rs1;	// IDU.scala:33:20
  wire [4:0]       _id_io_instrIO_instrRegID_rs2;	// IDU.scala:33:20
  wire [63:0]      _id_io_instrIO_instrRegImm_imm;	// IDU.scala:33:20
  wire [11:0]      _id_io_instrIO_csrID;	// IDU.scala:33:20
  wire [3:0][63:0] _GEN = {{64'h0}, {io_wb_data}, {io_forwardDataM}, {_rf_io_regData_rd1}};	// IDU.scala:34:20, Mux.scala:81:{58,61}
  wire [63:0]      _muxRegData_rd1_T_5 = _GEN[io_hu_idu_forwardCtrl_forwardA];	// Mux.scala:81:{58,61}
  wire [3:0][63:0] _GEN_0 = {{64'h0}, {io_wb_data}, {io_forwardDataM}, {_rf_io_regData_rd2}};	// IDU.scala:34:20, Mux.scala:81:{58,61}
  wire [63:0]      _muxRegData_rd2_T_5 = _GEN_0[io_hu_idu_forwardCtrl_forwardB];	// Mux.scala:81:{58,61}
  InstrDecode id (	// IDU.scala:33:20
    .io_instrIO_instrIn_instr          (io_if_id_IO_instr_instr),
    .io_ctrlFlowIO_ctrl2EXU_aluSrcA    (io_id_ex_IO_ctrl2EXU_aluSrcA),
    .io_ctrlFlowIO_ctrl2EXU_aluSrcB    (io_id_ex_IO_ctrl2EXU_aluSrcB),
    .io_ctrlFlowIO_ctrl2EXU_aluCtrl    (io_id_ex_IO_ctrl2EXU_aluCtrl),
    .io_ctrlFlowIO_ctrl2WBU_regWrite   (io_id_ex_IO_ctrl2WBU_regWrite),
    .io_ctrlFlowIO_ctrl2WBU_csrWrite   (io_id_ex_IO_ctrl2WBU_csrWrite),
    .io_ctrlFlowIO_ctrl2WBU_memtoReg   (io_id_ex_IO_ctrl2WBU_memtoReg),
    .io_ctrlFlowIO_ctrl2LSU_memRW      (io_id_ex_IO_ctrl2LSU_memRW),
    .io_ctrlFlowIO_ctrl2LSU_memWidth   (io_id_ex_IO_ctrl2LSU_memWidth),
    .io_ctrlFlowIO_ctrl2IDU_branchCtrl (_id_io_ctrlFlowIO_ctrl2IDU_branchCtrl),
    .io_ctrlFlowIO_ctrl2IDU_branch     (_id_io_ctrlFlowIO_ctrl2IDU_branch),
    .io_ctrlFlowIO_ctrl2IDU_jump       (_id_io_ctrlFlowIO_ctrl2IDU_jump),
    .io_ctrlFlowIO_ctrl2IDU_ecall      (_id_io_ctrlFlowIO_ctrl2IDU_ecall),
    .io_ctrlFlowIO_ctrl2IDU_pcPlusSrc  (_id_io_ctrlFlowIO_ctrl2IDU_pcPlusSrc),
    .io_instrIO_instrRegID_rs1         (_id_io_instrIO_instrRegID_rs1),
    .io_instrIO_instrRegID_rs2         (_id_io_instrIO_instrRegID_rs2),
    .io_instrIO_instrRegID_rd          (io_id_ex_IO_instrRegID_rd),
    .io_instrIO_instrRegImm_imm        (_id_io_instrIO_instrRegImm_imm),
    .io_instrIO_csrID                  (_id_io_instrIO_csrID)
  );
  RegisterFile rf (	// IDU.scala:34:20
    .clock             (clock),
    .io_instrRegID_rs1 (_id_io_instrIO_instrRegID_rs1),	// IDU.scala:33:20
    .io_instrRegID_rs2 (_id_io_instrIO_instrRegID_rs2),	// IDU.scala:33:20
    .io_instrRegID_rd  (io_wb_rd),
    .io_wdata          (io_wb_data),
    .io_wen            (io_wb_regWrite),
    .io_regData_rd1    (_rf_io_regData_rd1),
    .io_regData_rd2    (_rf_io_regData_rd2),
    .gpr_zero          (io_gpr_zero),
    .gpr_ra            (io_gpr_ra),
    .gpr_sp            (io_gpr_sp),
    .gpr_gp            (io_gpr_gp),
    .gpr_tp            (io_gpr_tp),
    .gpr_t0            (io_gpr_t0),
    .gpr_t1            (io_gpr_t1),
    .gpr_t2            (io_gpr_t2),
    .gpr_s0            (io_gpr_s0),
    .gpr_s1            (io_gpr_s1),
    .gpr_a0            (io_gpr_a0),
    .gpr_a1            (io_gpr_a1),
    .gpr_a2            (io_gpr_a2),
    .gpr_a3            (io_gpr_a3),
    .gpr_a4            (io_gpr_a4),
    .gpr_a5            (io_gpr_a5),
    .gpr_a6            (io_gpr_a6),
    .gpr_a7            (io_gpr_a7),
    .gpr_s2            (io_gpr_s2),
    .gpr_s3            (io_gpr_s3),
    .gpr_s4            (io_gpr_s4),
    .gpr_s5            (io_gpr_s5),
    .gpr_s6            (io_gpr_s6),
    .gpr_s7            (io_gpr_s7),
    .gpr_s8            (io_gpr_s8),
    .gpr_s9            (io_gpr_s9),
    .gpr_s10           (io_gpr_s10),
    .gpr_s11           (io_gpr_s11),
    .gpr_t3            (io_gpr_t3),
    .gpr_t4            (io_gpr_t4),
    .gpr_t5            (io_gpr_t5),
    .gpr_t6            (io_gpr_t6)
  );
  CSRFile csrf (	// IDU.scala:35:22
    .clock            (clock),
    .io_csrDst        (io_wb_csrID),
    .io_csrSrc        (_id_io_instrIO_csrID),	// IDU.scala:33:20
    .io_wdata         (io_wb_data),
    .io_wen           (io_wb_csrWrite),
    .io_ecall         (_id_io_ctrlFlowIO_ctrl2IDU_ecall),	// IDU.scala:33:20
    .io_csrData       (io_id_ex_IO_csrData),
    .io_mepc          (io_mepc),
    .csrDebug_mstatus (io_csrDebug_mstatus),
    .csrDebug_mtvec   (io_csrDebug_mtvec),
    .csrDebug_mepc    (io_csrDebug_mepc),
    .csrDebug_mcause  (io_csrDebug_mcause)
  );
  BRU bru (	// IDU.scala:36:21
    .io_srcA (_muxRegData_rd1_T_5),	// Mux.scala:81:58
    .io_srcB (_muxRegData_rd2_T_5),	// Mux.scala:81:58
    .io_ctrl ({2'h0, _id_io_ctrlFlowIO_ctrl2IDU_branchCtrl}),	// IDU.scala:33:20, :78:17, Mux.scala:81:61
    .io_outC (_bru_io_outC)
  );
  assign io_id_ex_IO_pc_pc = io_if_id_IO_pc_pc;	// <stdin>:1394:10
  assign io_id_ex_IO_instrRegID_rs1 = _id_io_instrIO_instrRegID_rs1;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_id_ex_IO_instrRegID_rs2 = _id_io_instrIO_instrRegID_rs2;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_id_ex_IO_instrRegImm_imm = _id_io_instrIO_instrRegImm_imm;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_id_ex_IO_regData_rd1 = _muxRegData_rd1_T_5;	// <stdin>:1394:10, Mux.scala:81:58
  assign io_id_ex_IO_regData_rd2 = _muxRegData_rd2_T_5;	// <stdin>:1394:10, Mux.scala:81:58
  assign io_id_ex_IO_csrID = _id_io_instrIO_csrID;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_id_ex_IO_instr_instr = io_if_id_IO_instr_instr;	// <stdin>:1394:10
  assign io_hu_idu_jump = _id_io_ctrlFlowIO_ctrl2IDU_jump[0];	// <stdin>:1394:10, IDU.scala:33:20, :118:25
  assign io_hu_idu_branch = _id_io_ctrlFlowIO_ctrl2IDU_branch;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_hu_idu_pcPlusSrc = _id_io_ctrlFlowIO_ctrl2IDU_pcPlusSrc;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_hu_idu_rs1 = _id_io_instrIO_instrRegID_rs1;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_hu_idu_rs2 = _id_io_instrIO_instrRegID_rs2;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_npc_pc = (_id_io_ctrlFlowIO_ctrl2IDU_pcPlusSrc ? _muxRegData_rd1_T_5 : io_if_id_IO_pc_pc) +
                _id_io_instrIO_instrRegImm_imm;	// <stdin>:1394:10, IDU.scala:33:20, :105:32, Mux.scala:81:58
  assign io_pcSrc = _id_io_ctrlFlowIO_ctrl2IDU_jump == 2'h1 | _id_io_ctrlFlowIO_ctrl2IDU_branch & _bru_io_outC;	// <stdin>:1394:10, IDU.scala:33:20, :36:21, :89:66, :92:41, :93:9, Mux.scala:81:61
  assign io_instr_jump = _id_io_ctrlFlowIO_ctrl2IDU_jump;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_instr_branch = _id_io_ctrlFlowIO_ctrl2IDU_branch;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_instr_pcPlusSrc = _id_io_ctrlFlowIO_ctrl2IDU_pcPlusSrc;	// <stdin>:1394:10, IDU.scala:33:20
  assign io_bruSrcA = _muxRegData_rd1_T_5;	// <stdin>:1394:10, Mux.scala:81:58
  assign io_bruSrcB = _muxRegData_rd2_T_5;	// <stdin>:1394:10, Mux.scala:81:58
  assign io_bruOutC = _bru_io_outC;	// <stdin>:1394:10, IDU.scala:36:21
  assign io_bruCtrl = _id_io_ctrlFlowIO_ctrl2IDU_branchCtrl;	// <stdin>:1394:10, IDU.scala:33:20
endmodule

module ALU(	// <stdin>:1487:10
  input  [63:0] io_srcA,
                io_srcB,
  input  [5:0]  io_ctrl,
  output [63:0] io_outC);

  wire [63:0]  _GEN = {58'h0, io_srcB[5:0]};	// ALU.scala:19:68, :23:58
  wire [31:0]  _io_outC_T_25 = io_srcA[31:0] + io_srcB[31:0];	// ALU.scala:28:{65,73,82}
  wire [31:0]  _io_outC_T_33 = io_srcA[31:0] - io_srcB[31:0];	// ALU.scala:28:{65,82}, :29:73
  wire [62:0]  _io_outC_T_39 = {31'h0, io_srcA[31:0]} << io_srcB[4:0];	// ALU.scala:28:65, :30:{73,83}, Bitwise.scala:77:12
  wire [31:0]  _io_outC_T_58 = io_srcA[31:0] ^ io_srcB[31:0];	// ALU.scala:28:{65,82}, :33:73
  wire [31:0]  _GEN_0 = {27'h0, io_srcB[4:0]};	// ALU.scala:30:83, :34:73
  wire [31:0]  _io_outC_T_64 = io_srcA[31:0] >> _GEN_0;	// ALU.scala:28:65, :34:73
  wire [31:0]  _io_outC_T_71 = $signed($signed(io_srcA[31:0]) >>> _GEN_0);	// ALU.scala:28:65, :34:73, :35:82
  wire [31:0]  _io_outC_T_78 = io_srcA[31:0] | io_srcB[31:0];	// ALU.scala:28:{65,82}, :37:73
  wire [31:0]  _io_outC_T_84 = io_srcA[31:0] & io_srcB[31:0];	// ALU.scala:28:{65,82}, :38:73
  wire [63:0]  _GEN_1 = io_srcA * io_srcB;	// ALU.scala:39:58
  wire [64:0]  _io_outC_T_103 = $signed({io_srcA[63], io_srcA}) / $signed({io_srcB[63], io_srcB});	// ALU.scala:40:67, :43:67
  wire [32:0]  _io_outC_T_122 = $signed({io_srcA[31], io_srcA[31:0]}) / $signed({io_srcB[31], io_srcB[31:0]});	// ALU.scala:28:{65,82}, :47:82, :48:82
  wire [31:0]  _io_outC_T_135 = $signed(io_srcA[31:0]) % $signed(io_srcB[31:0]);	// ALU.scala:28:{65,82}, :50:82
  wire [126:0] _io_outC_T_167 = io_ctrl == 6'hA ? {63'h0, {32{_io_outC_T_25[31]}}, _io_outC_T_25} : io_ctrl == 6'h21 ?
                {63'h0, io_srcA & ~io_srcB} : io_ctrl == 6'h9 ? {63'h0, io_srcA & io_srcB} : io_ctrl ==
                6'h8 ? {63'h0, io_srcA | io_srcB} : io_ctrl == 6'h7 ? {63'h0, $signed($signed(io_srcA) >>>
                _GEN)} : io_ctrl == 6'h6 ? {63'h0, io_srcA >> _GEN} : io_ctrl == 6'h5 ? {63'h0, io_srcA ^
                io_srcB} : io_ctrl == 6'h4 ? {126'h0, io_srcA < io_srcB} : io_ctrl == 6'h3 ? {126'h0,
                $signed(io_srcA) < $signed(io_srcB)} : io_ctrl == 6'h2 ? {63'h0, io_srcA} << io_srcB[5:0] :
                {63'h0, io_ctrl == 6'h1 ? io_srcA - io_srcB : io_ctrl == 6'h0 ? io_srcA + io_srcB : 64'h0};	// ALU.scala:17:58, :18:58, :19:{58,68}, :20:67, :21:67, :22:58, :23:58, :24:67, :25:58, :26:58, :27:{58,60}, :28:73, BitUtils.scala:9:24, Bitwise.scala:77:12, Mux.scala:81:{58,61}
  assign io_outC = io_ctrl == 6'h20 ? {32'h0, io_srcA[31:0] % io_srcB[31:0]} : io_ctrl == 6'h1F ?
                {{32{_io_outC_T_135[31]}}, _io_outC_T_135} : io_ctrl == 6'h1E ? {32'h0, io_srcA[31:0] /
                io_srcB[31:0]} : io_ctrl == 6'h1D ? {{31{_io_outC_T_122[32]}}, _io_outC_T_122} : io_ctrl ==
                6'h1C ? {{32{io_srcA[31]}}, io_srcA[31:0]} * {{32{io_srcB[31]}}, io_srcB[31:0]} : io_ctrl
                == 6'h1B ? io_srcA % io_srcB : io_ctrl == 6'h1A ? $signed(io_srcA) % $signed(io_srcB) :
                io_ctrl == 6'h19 ? io_srcA / io_srcB : io_ctrl == 6'h18 ? _io_outC_T_103[63:0] : io_ctrl ==
                6'h17 ? {32'h0, _GEN_1[63:32]} : io_ctrl == 6'h16 ? {32'h0, _GEN_1[63:32]} : io_ctrl ==
                6'h15 ? {32'h0, _GEN_1[63:32]} : io_ctrl == 6'h14 ? _GEN_1 : io_ctrl == 6'h13 ?
                {{32{_io_outC_T_84[31]}}, _io_outC_T_84} : io_ctrl == 6'h12 ? {{32{_io_outC_T_78[31]}},
                _io_outC_T_78} : io_ctrl == 6'h11 ? {{32{_io_outC_T_71[31]}}, _io_outC_T_71} : io_ctrl ==
                6'h10 ? {{32{_io_outC_T_64[31]}}, _io_outC_T_64} : io_ctrl == 6'hF ?
                {{32{_io_outC_T_58[31]}}, _io_outC_T_58} : io_ctrl == 6'hE ? {63'h0, io_srcA[31:0] <
                io_srcB[31:0]} : io_ctrl == 6'hD ? {64{$signed(io_srcA[31:0]) < $signed(io_srcB[31:0])}} :
                io_ctrl == 6'hC ? {{32{_io_outC_T_39[31]}}, _io_outC_T_39[31:0]} : io_ctrl == 6'hB ?
                {{32{_io_outC_T_33[31]}}, _io_outC_T_33} : _io_outC_T_167[63:0];	// <stdin>:1487:10, ALU.scala:28:{65,82}, :29:73, :30:{73,90}, :31:82, :32:82, :33:73, :34:73, :35:82, :37:73, :38:73, :39:58, :40:86, :41:86, :42:86, :43:67, :44:58, :45:67, :46:58, :47:82, :48:82, :49:82, :50:82, :51:82, BitUtils.scala:9:24, Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:81:{58,61}
endmodule

module EXU(	// <stdin>:1718:10
  input  [63:0] io_id_ex_IO_pc_pc,
  input  [4:0]  io_id_ex_IO_instrRegID_rs1,
                io_id_ex_IO_instrRegID_rs2,
                io_id_ex_IO_instrRegID_rd,
  input  [63:0] io_id_ex_IO_instrRegImm_imm,
                io_id_ex_IO_regData_rd1,
                io_id_ex_IO_regData_rd2,
  input  [1:0]  io_id_ex_IO_ctrl2EXU_aluSrcA,
  input  [2:0]  io_id_ex_IO_ctrl2EXU_aluSrcB,
  input  [5:0]  io_id_ex_IO_ctrl2EXU_aluCtrl,
  input         io_id_ex_IO_ctrl2WBU_regWrite,
                io_id_ex_IO_ctrl2WBU_csrWrite,
                io_id_ex_IO_ctrl2WBU_memtoReg,
  input  [1:0]  io_id_ex_IO_ctrl2LSU_memRW,
  input  [2:0]  io_id_ex_IO_ctrl2LSU_memWidth,
  input  [11:0] io_id_ex_IO_csrID,
  input  [63:0] io_id_ex_IO_csrData,
  input  [31:0] io_id_ex_IO_instr_instr,
  input  [1:0]  io_hu_exu_forwardCtrl_forwardA,
                io_hu_exu_forwardCtrl_forwardB,
  input  [63:0] io_forwardDataM,
                io_forwardDataW,
  output [63:0] io_ex_ls_IO_aluOut,
                io_ex_ls_IO_writeData,
  output [4:0]  io_ex_ls_IO_rd,
  output [11:0] io_ex_ls_IO_csrID,
  output        io_ex_ls_IO_ctrl2WBU_regWrite,
                io_ex_ls_IO_ctrl2WBU_csrWrite,
                io_ex_ls_IO_ctrl2WBU_memtoReg,
  output [1:0]  io_ex_ls_IO_ctrl2LSU_memRW,
  output [2:0]  io_ex_ls_IO_ctrl2LSU_memWidth,
  output [63:0] io_ex_ls_IO_commit_pc,
  output [31:0] io_ex_ls_IO_instr_instr,
  output [4:0]  io_hu_exu_regID_rs1,
                io_hu_exu_regID_rs2,
                io_hu_exu_regID_rd,
  output        io_hu_exu_regWrite,
                io_hu_exu_memtoReg,
  output [63:0] io_alu_srcA_data,
                io_alu_srcB_data);

  wire [3:0][63:0] _GEN = {{64'h0}, {io_forwardDataW}, {io_forwardDataM}, {io_id_ex_IO_regData_rd1}};	// Mux.scala:81:{58,61}
  wire [3:0][63:0] _GEN_0 = {{64'h0}, {io_forwardDataW}, {io_forwardDataM}, {io_id_ex_IO_regData_rd2}};	// Mux.scala:81:{58,61}
  wire [63:0]      data2 = _GEN_0[io_hu_exu_forwardCtrl_forwardB];	// Mux.scala:81:{58,61}
  wire [3:0][63:0] _GEN_1 = {{io_id_ex_IO_csrData}, {64'h0}, {io_id_ex_IO_pc_pc},
                {_GEN[io_hu_exu_forwardCtrl_forwardA]}};	// Mux.scala:81:{58,61}
  wire [63:0]      srcA = _GEN_1[io_id_ex_IO_ctrl2EXU_aluSrcA];	// Mux.scala:81:{58,61}
  wire [7:0][63:0] _GEN_2 = {{64'h0}, {64'h0}, {io_id_ex_IO_csrData}, {64'hB}, {64'h4}, {64'h0},
                {io_id_ex_IO_instrRegImm_imm}, {data2}};	// Mux.scala:81:{58,61}
  wire [63:0]      srcB = _GEN_2[io_id_ex_IO_ctrl2EXU_aluSrcB];	// Mux.scala:81:{58,61}
  ALU alu (	// EXU.scala:20:25
    .io_srcA (srcA),	// Mux.scala:81:58
    .io_srcB (srcB),	// Mux.scala:81:58
    .io_ctrl (io_id_ex_IO_ctrl2EXU_aluCtrl),
    .io_outC (io_ex_ls_IO_aluOut)
  );
  assign io_ex_ls_IO_writeData = data2;	// <stdin>:1718:10, Mux.scala:81:58
  assign io_ex_ls_IO_rd = io_id_ex_IO_instrRegID_rd;	// <stdin>:1718:10
  assign io_ex_ls_IO_csrID = io_id_ex_IO_csrID;	// <stdin>:1718:10
  assign io_ex_ls_IO_ctrl2WBU_regWrite = io_id_ex_IO_ctrl2WBU_regWrite;	// <stdin>:1718:10
  assign io_ex_ls_IO_ctrl2WBU_csrWrite = io_id_ex_IO_ctrl2WBU_csrWrite;	// <stdin>:1718:10
  assign io_ex_ls_IO_ctrl2WBU_memtoReg = io_id_ex_IO_ctrl2WBU_memtoReg;	// <stdin>:1718:10
  assign io_ex_ls_IO_ctrl2LSU_memRW = io_id_ex_IO_ctrl2LSU_memRW;	// <stdin>:1718:10
  assign io_ex_ls_IO_ctrl2LSU_memWidth = io_id_ex_IO_ctrl2LSU_memWidth;	// <stdin>:1718:10
  assign io_ex_ls_IO_commit_pc = io_id_ex_IO_pc_pc;	// <stdin>:1718:10
  assign io_ex_ls_IO_instr_instr = io_id_ex_IO_instr_instr;	// <stdin>:1718:10
  assign io_hu_exu_regID_rs1 = io_id_ex_IO_instrRegID_rs1;	// <stdin>:1718:10
  assign io_hu_exu_regID_rs2 = io_id_ex_IO_instrRegID_rs2;	// <stdin>:1718:10
  assign io_hu_exu_regID_rd = io_id_ex_IO_instrRegID_rd;	// <stdin>:1718:10
  assign io_hu_exu_regWrite = io_id_ex_IO_ctrl2WBU_regWrite;	// <stdin>:1718:10
  assign io_hu_exu_memtoReg = io_id_ex_IO_ctrl2WBU_memtoReg;	// <stdin>:1718:10
  assign io_alu_srcA_data = srcA;	// <stdin>:1718:10, Mux.scala:81:58
  assign io_alu_srcB_data = srcB;	// <stdin>:1718:10, Mux.scala:81:58
endmodule

module LSU(	// <stdin>:1775:10
  input  [63:0] ioInternal_Pipeline_EX2LS_MsgBundle_aluOut,
                ioInternal_Pipeline_EX2LS_MsgBundle_writeData,
  input  [4:0]  ioInternal_Pipeline_EX2LS_MsgBundle_rd,
  input  [11:0] ioInternal_Pipeline_EX2LS_MsgBundle_csrID,
  input         ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_regWrite,
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_csrWrite,
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_memtoReg,
  input  [1:0]  ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memRW,
  input  [2:0]  ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth,
  input         ioExternal_Read_R_s2mRvalid,
  input  [63:0] ioExternal_Read_R_s2mRdata,
  output [63:0] ioInternal_Pipeline_LS2WB_MsgBundle_readData,
                ioInternal_Pipeline_LS2WB_MsgBundle_exOut,
  output [4:0]  ioInternal_Pipeline_LS2WB_MsgBundle_rd,
  output [11:0] ioInternal_Pipeline_LS2WB_MsgBundle_csrID,
  output        ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_regWrite,
                ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_csrWrite,
                ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_memtoReg,
                ioInternal_hu_lsu_memtoReg,
                ioInternal_hu_lsu_regWrite,
  output [4:0]  ioInternal_hu_lsu_rd,
  output [63:0] ioInternal_oForwardData,
  output        ioExternal_Read_AR_m2sARvalid,
  output [31:0] ioExternal_Read_AR_m2sARaddr,
  output        ioExternal_Read_R_m2sRready,
                ioExternal_AW_m2sAWvalid,
  output [31:0] ioExternal_AW_m2sAWaddr,
  output        ioExternal_W_m2sWvalid,
  output [63:0] ioExternal_W_m2sWdata,
  output [7:0]  ioExternal_W_m2sWstrb);

  wire _ioExternal_AW_m2sAWvalid_T_1 = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memRW == 2'h2;	// LSU.scala:61:42, Mux.scala:81:61
  assign ioInternal_Pipeline_LS2WB_MsgBundle_readData = ioExternal_Read_R_s2mRdata;	// <stdin>:1775:10
  assign ioInternal_Pipeline_LS2WB_MsgBundle_exOut = ioInternal_Pipeline_EX2LS_MsgBundle_aluOut;	// <stdin>:1775:10
  assign ioInternal_Pipeline_LS2WB_MsgBundle_rd = ioInternal_Pipeline_EX2LS_MsgBundle_rd;	// <stdin>:1775:10
  assign ioInternal_Pipeline_LS2WB_MsgBundle_csrID = ioInternal_Pipeline_EX2LS_MsgBundle_csrID;	// <stdin>:1775:10
  assign ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_regWrite = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_regWrite;	// <stdin>:1775:10
  assign ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_csrWrite = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_csrWrite;	// <stdin>:1775:10
  assign ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_memtoReg = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_memtoReg;	// <stdin>:1775:10
  assign ioInternal_hu_lsu_memtoReg = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_memtoReg;	// <stdin>:1775:10
  assign ioInternal_hu_lsu_regWrite = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_regWrite;	// <stdin>:1775:10
  assign ioInternal_hu_lsu_rd = ioInternal_Pipeline_EX2LS_MsgBundle_rd;	// <stdin>:1775:10
  assign ioInternal_oForwardData = ioInternal_Pipeline_EX2LS_MsgBundle_aluOut;	// <stdin>:1775:10
  assign ioExternal_Read_AR_m2sARvalid = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memRW == 2'h1;	// <stdin>:1775:10, LSU.scala:60:49
  assign ioExternal_Read_AR_m2sARaddr = ioInternal_Pipeline_EX2LS_MsgBundle_aluOut[31:0];	// <stdin>:1775:10, LSU.scala:66:40
  assign ioExternal_Read_R_m2sRready = ioExternal_Read_R_s2mRvalid;	// <stdin>:1775:10
  assign ioExternal_AW_m2sAWvalid = _ioExternal_AW_m2sAWvalid_T_1;	// <stdin>:1775:10, LSU.scala:61:42
  assign ioExternal_AW_m2sAWaddr = ioInternal_Pipeline_EX2LS_MsgBundle_aluOut[31:0];	// <stdin>:1775:10, LSU.scala:66:40
  assign ioExternal_W_m2sWvalid = _ioExternal_AW_m2sAWvalid_T_1;	// <stdin>:1775:10, LSU.scala:61:42
  assign ioExternal_W_m2sWdata = ioInternal_Pipeline_EX2LS_MsgBundle_writeData;	// <stdin>:1775:10
  assign ioExternal_W_m2sWstrb = ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth == 3'h6 ? 8'hF :
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth == 3'h5 ? 8'h3 :
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth == 3'h4 ? 8'h1 :
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth == 3'h3 ? 8'hFF : {4'h0,
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth == 3'h2 ? 4'hF : {2'h0,
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth == 3'h1 ? 2'h3 : {1'h0,
                ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth == 3'h0}}};	// <stdin>:1775:10, Mux.scala:81:{58,61}
endmodule

module WBU(	// <stdin>:1831:10
  input  [63:0] io_ls_wb_IO_readData,
                io_ls_wb_IO_exOut,
  input  [4:0]  io_ls_wb_IO_rd,
  input  [11:0] io_ls_wb_IO_csrID,
  input         io_ls_wb_IO_ctrl2WBU_regWrite,
                io_ls_wb_IO_ctrl2WBU_csrWrite,
                io_ls_wb_IO_ctrl2WBU_memtoReg,
  input  [63:0] io_ls_wb_IO_commit_pc,
  input  [31:0] io_ls_wb_IO_instr_instr,
  output [63:0] io_wbIO_data,
  output [4:0]  io_wbIO_rd,
  output [11:0] io_wbIO_csrID,
  output        io_wbIO_regWrite,
                io_wbIO_csrWrite,
                io_hu_wbu_regWrite,
  output [4:0]  io_hu_wbu_rd,
  output [63:0] io_commit_pc,
  output [31:0] io_instr_instr);

  assign io_wbIO_data = io_ls_wb_IO_ctrl2WBU_memtoReg ? io_ls_wb_IO_readData : io_ls_wb_IO_exOut;	// <stdin>:1831:10, Mux.scala:81:58
  assign io_wbIO_rd = io_ls_wb_IO_rd;	// <stdin>:1831:10
  assign io_wbIO_csrID = io_ls_wb_IO_csrID;	// <stdin>:1831:10
  assign io_wbIO_regWrite = io_ls_wb_IO_ctrl2WBU_regWrite;	// <stdin>:1831:10
  assign io_wbIO_csrWrite = io_ls_wb_IO_ctrl2WBU_csrWrite;	// <stdin>:1831:10
  assign io_hu_wbu_regWrite = io_ls_wb_IO_ctrl2WBU_regWrite;	// <stdin>:1831:10
  assign io_hu_wbu_rd = io_ls_wb_IO_rd;	// <stdin>:1831:10
  assign io_commit_pc = io_ls_wb_IO_commit_pc;	// <stdin>:1831:10
  assign io_instr_instr = io_ls_wb_IO_instr_instr;	// <stdin>:1831:10
endmodule

module IF_ID(	// <stdin>:1850:10
  input         clock,
  input  [31:0] io_in_instr_instr,
  input  [63:0] io_in_pc_pc,
  input         io_clr,
                io_en,
  output [31:0] io_out_instr_instr,
  output [63:0] io_out_pc_pc);

  reg [95:0] reg_0;	// IF_ID.scala:16:18
  always @(posedge clock) begin
    if (io_en & ~io_clr)	// IF_ID.scala:17:{30,41}
      reg_0 <= {io_in_instr_instr, io_in_pc_pc};	// IF_ID.scala:16:18, :18:28
    else if (io_en & io_clr)	// IF_ID.scala:17:{30,41}, :19:36
      reg_0 <= 96'h0;	// IF_ID.scala:16:18, :20:13
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1850:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1850:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1850:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1850:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1850:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1850:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1850:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1850:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1850:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1850:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1850:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1850:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1850:10
        reg_0 = {_RANDOM_0, _RANDOM_1, _RANDOM_2};	// IF_ID.scala:16:18
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1850:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1850:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_out_instr_instr = reg_0[95:64];	// <stdin>:1850:10, IF_ID.scala:16:18, :25:27
  assign io_out_pc_pc = reg_0[63:0];	// <stdin>:1850:10, IF_ID.scala:16:18, :25:27
endmodule

module ID_EX(	// <stdin>:1880:10
  input         clock,
                io_clr,
  input  [63:0] io_in_pc_pc,
  input  [4:0]  io_in_instrRegID_rs1,
                io_in_instrRegID_rs2,
                io_in_instrRegID_rd,
  input  [63:0] io_in_instrRegImm_imm,
                io_in_regData_rd1,
                io_in_regData_rd2,
  input  [1:0]  io_in_ctrl2EXU_aluSrcA,
  input  [2:0]  io_in_ctrl2EXU_aluSrcB,
  input  [5:0]  io_in_ctrl2EXU_aluCtrl,
  input         io_in_ctrl2WBU_regWrite,
                io_in_ctrl2WBU_csrWrite,
                io_in_ctrl2WBU_memtoReg,
  input  [1:0]  io_in_ctrl2LSU_memRW,
  input  [2:0]  io_in_ctrl2LSU_memWidth,
  input  [11:0] io_in_csrID,
  input  [63:0] io_in_csrData,
  input  [31:0] io_in_instr_instr,
  output [63:0] io_out_pc_pc,
  output [4:0]  io_out_instrRegID_rs1,
                io_out_instrRegID_rs2,
                io_out_instrRegID_rd,
  output [63:0] io_out_instrRegImm_imm,
                io_out_regData_rd1,
                io_out_regData_rd2,
  output [1:0]  io_out_ctrl2EXU_aluSrcA,
  output [2:0]  io_out_ctrl2EXU_aluSrcB,
  output [5:0]  io_out_ctrl2EXU_aluCtrl,
  output        io_out_ctrl2WBU_regWrite,
                io_out_ctrl2WBU_csrWrite,
                io_out_ctrl2WBU_memtoReg,
  output [1:0]  io_out_ctrl2LSU_memRW,
  output [2:0]  io_out_ctrl2LSU_memWidth,
  output [11:0] io_out_csrID,
  output [63:0] io_out_csrData,
  output [31:0] io_out_instr_instr);

  reg [397:0] reg_0;	// ID_EX.scala:15:18
  always @(posedge clock) begin
    if (io_clr)
      reg_0 <= 398'h0;	// ID_EX.scala:15:18, :26:13
    else
      reg_0 <= {io_in_pc_pc, io_in_instrRegID_rs1, io_in_instrRegID_rs2, io_in_instrRegID_rd,
                                                io_in_instrRegImm_imm, io_in_regData_rd1, io_in_regData_rd2, io_in_ctrl2EXU_aluSrcA,
                                                io_in_ctrl2EXU_aluSrcB, io_in_ctrl2EXU_aluCtrl, io_in_ctrl2WBU_regWrite,
                                                io_in_ctrl2WBU_csrWrite, io_in_ctrl2WBU_memtoReg, io_in_ctrl2LSU_memRW,
                                                io_in_ctrl2LSU_memWidth, io_in_csrID, io_in_csrData, io_in_instr_instr};	// ID_EX.scala:15:18, :24:22
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1880:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1880:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1880:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_8;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_9;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_10;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_11;	// <stdin>:1880:10
      automatic logic [31:0] _RANDOM_12;	// <stdin>:1880:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1880:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1880:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1880:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_7 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_8 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_9 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_10 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_11 = `RANDOM;	// <stdin>:1880:10
        _RANDOM_12 = `RANDOM;	// <stdin>:1880:10
        reg_0 = {_RANDOM_0, _RANDOM_1, _RANDOM_2, _RANDOM_3, _RANDOM_4, _RANDOM_5, _RANDOM_6, _RANDOM_7,
                                                                _RANDOM_8, _RANDOM_9, _RANDOM_10, _RANDOM_11, _RANDOM_12[13:0]};	// ID_EX.scala:15:18
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1880:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1880:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_out_pc_pc = reg_0[397:334];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_instrRegID_rs1 = reg_0[333:329];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_instrRegID_rs2 = reg_0[328:324];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_instrRegID_rd = reg_0[323:319];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_instrRegImm_imm = reg_0[318:255];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_regData_rd1 = reg_0[254:191];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_regData_rd2 = reg_0[190:127];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2EXU_aluSrcA = reg_0[126:125];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2EXU_aluSrcB = reg_0[124:122];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2EXU_aluCtrl = reg_0[121:116];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2WBU_regWrite = reg_0[115];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2WBU_csrWrite = reg_0[114];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2WBU_memtoReg = reg_0[113];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2LSU_memRW = reg_0[112:111];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_ctrl2LSU_memWidth = reg_0[110:108];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_csrID = reg_0[107:96];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_csrData = reg_0[95:32];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
  assign io_out_instr_instr = reg_0[31:0];	// <stdin>:1880:10, ID_EX.scala:15:18, :30:27
endmodule

module EX_LS(	// <stdin>:1952:10
  input         clock,
  input  [63:0] io_in_aluOut,
                io_in_writeData,
  input  [4:0]  io_in_rd,
  input  [11:0] io_in_csrID,
  input         io_in_ctrl2WBU_regWrite,
                io_in_ctrl2WBU_csrWrite,
                io_in_ctrl2WBU_memtoReg,
  input  [1:0]  io_in_ctrl2LSU_memRW,
  input  [2:0]  io_in_ctrl2LSU_memWidth,
  input  [63:0] io_in_commit_pc,
  input  [31:0] io_in_instr_instr,
  output [63:0] io_out_aluOut,
                io_out_writeData,
  output [4:0]  io_out_rd,
  output [11:0] io_out_csrID,
  output        io_out_ctrl2WBU_regWrite,
                io_out_ctrl2WBU_csrWrite,
                io_out_ctrl2WBU_memtoReg,
  output [1:0]  io_out_ctrl2LSU_memRW,
  output [2:0]  io_out_ctrl2LSU_memWidth,
  output [63:0] io_out_commit_pc,
  output [31:0] io_out_instr_instr);

  reg [63:0] reg_aluOut;	// EX_LS.scala:14:22
  reg [63:0] reg_writeData;	// EX_LS.scala:14:22
  reg [4:0]  reg_rd;	// EX_LS.scala:14:22
  reg [11:0] reg_csrID;	// EX_LS.scala:14:22
  reg        reg_ctrl2WBU_regWrite;	// EX_LS.scala:14:22
  reg        reg_ctrl2WBU_csrWrite;	// EX_LS.scala:14:22
  reg        reg_ctrl2WBU_memtoReg;	// EX_LS.scala:14:22
  reg [1:0]  reg_ctrl2LSU_memRW;	// EX_LS.scala:14:22
  reg [2:0]  reg_ctrl2LSU_memWidth;	// EX_LS.scala:14:22
  reg [63:0] reg_commit_pc;	// EX_LS.scala:14:22
  reg [31:0] reg_instr_instr;	// EX_LS.scala:14:22
  always @(posedge clock) begin
    reg_aluOut <= io_in_aluOut;	// EX_LS.scala:14:22
    reg_writeData <= io_in_writeData;	// EX_LS.scala:14:22
    reg_rd <= io_in_rd;	// EX_LS.scala:14:22
    reg_csrID <= io_in_csrID;	// EX_LS.scala:14:22
    reg_ctrl2WBU_regWrite <= io_in_ctrl2WBU_regWrite;	// EX_LS.scala:14:22
    reg_ctrl2WBU_csrWrite <= io_in_ctrl2WBU_csrWrite;	// EX_LS.scala:14:22
    reg_ctrl2WBU_memtoReg <= io_in_ctrl2WBU_memtoReg;	// EX_LS.scala:14:22
    reg_ctrl2LSU_memRW <= io_in_ctrl2LSU_memRW;	// EX_LS.scala:14:22
    reg_ctrl2LSU_memWidth <= io_in_ctrl2LSU_memWidth;	// EX_LS.scala:14:22
    reg_commit_pc <= io_in_commit_pc;	// EX_LS.scala:14:22
    reg_instr_instr <= io_in_instr_instr;	// EX_LS.scala:14:22
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1952:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1952:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1952:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1952:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:1952:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1952:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1952:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1952:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1952:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1952:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1952:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1952:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1952:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1952:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1952:10
        _RANDOM_7 = `RANDOM;	// <stdin>:1952:10
        reg_aluOut = {_RANDOM_0, _RANDOM_1};	// EX_LS.scala:14:22
        reg_writeData = {_RANDOM_2, _RANDOM_3};	// EX_LS.scala:14:22
        reg_rd = _RANDOM_4[4:0];	// EX_LS.scala:14:22
        reg_csrID = _RANDOM_4[16:5];	// EX_LS.scala:14:22
        reg_ctrl2WBU_regWrite = _RANDOM_4[17];	// EX_LS.scala:14:22
        reg_ctrl2WBU_csrWrite = _RANDOM_4[18];	// EX_LS.scala:14:22
        reg_ctrl2WBU_memtoReg = _RANDOM_4[19];	// EX_LS.scala:14:22
        reg_ctrl2LSU_memRW = _RANDOM_4[21:20];	// EX_LS.scala:14:22
        reg_ctrl2LSU_memWidth = _RANDOM_4[24:22];	// EX_LS.scala:14:22
        reg_commit_pc = {_RANDOM_4[31:25], _RANDOM_5, _RANDOM_6[24:0]};	// EX_LS.scala:14:22
        reg_instr_instr = {_RANDOM_6[31:25], _RANDOM_7[24:0]};	// EX_LS.scala:14:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1952:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1952:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_out_aluOut = reg_aluOut;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_writeData = reg_writeData;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_rd = reg_rd;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_csrID = reg_csrID;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_ctrl2WBU_regWrite = reg_ctrl2WBU_regWrite;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_ctrl2WBU_csrWrite = reg_ctrl2WBU_csrWrite;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_ctrl2WBU_memtoReg = reg_ctrl2WBU_memtoReg;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_ctrl2LSU_memRW = reg_ctrl2LSU_memRW;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_ctrl2LSU_memWidth = reg_ctrl2LSU_memWidth;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_commit_pc = reg_commit_pc;	// <stdin>:1952:10, EX_LS.scala:14:22
  assign io_out_instr_instr = reg_instr_instr;	// <stdin>:1952:10, EX_LS.scala:14:22
endmodule

module LS_WB(	// <stdin>:1972:10
  input         clock,
  input  [63:0] io_in_readData,
                io_in_exOut,
  input  [4:0]  io_in_rd,
  input  [11:0] io_in_csrID,
  input         io_in_ctrl2WBU_regWrite,
                io_in_ctrl2WBU_csrWrite,
                io_in_ctrl2WBU_memtoReg,
  input  [63:0] io_in_commit_pc,
  input  [31:0] io_in_instr_instr,
  output [63:0] io_out_readData,
                io_out_exOut,
  output [4:0]  io_out_rd,
  output [11:0] io_out_csrID,
  output        io_out_ctrl2WBU_regWrite,
                io_out_ctrl2WBU_csrWrite,
                io_out_ctrl2WBU_memtoReg,
  output [63:0] io_out_commit_pc,
  output [31:0] io_out_instr_instr);

  reg [63:0] reg_readData;	// LS_WB.scala:13:22
  reg [63:0] reg_exOut;	// LS_WB.scala:13:22
  reg [4:0]  reg_rd;	// LS_WB.scala:13:22
  reg [11:0] reg_csrID;	// LS_WB.scala:13:22
  reg        reg_ctrl2WBU_regWrite;	// LS_WB.scala:13:22
  reg        reg_ctrl2WBU_csrWrite;	// LS_WB.scala:13:22
  reg        reg_ctrl2WBU_memtoReg;	// LS_WB.scala:13:22
  reg [63:0] reg_commit_pc;	// LS_WB.scala:13:22
  reg [31:0] reg_instr_instr;	// LS_WB.scala:13:22
  always @(posedge clock) begin
    reg_readData <= io_in_readData;	// LS_WB.scala:13:22
    reg_exOut <= io_in_exOut;	// LS_WB.scala:13:22
    reg_rd <= io_in_rd;	// LS_WB.scala:13:22
    reg_csrID <= io_in_csrID;	// LS_WB.scala:13:22
    reg_ctrl2WBU_regWrite <= io_in_ctrl2WBU_regWrite;	// LS_WB.scala:13:22
    reg_ctrl2WBU_csrWrite <= io_in_ctrl2WBU_csrWrite;	// LS_WB.scala:13:22
    reg_ctrl2WBU_memtoReg <= io_in_ctrl2WBU_memtoReg;	// LS_WB.scala:13:22
    reg_commit_pc <= io_in_commit_pc;	// LS_WB.scala:13:22
    reg_instr_instr <= io_in_instr_instr;	// LS_WB.scala:13:22
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:1972:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:1972:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:1972:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:1972:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:1972:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:1972:10
        `INIT_RANDOM_PROLOG_	// <stdin>:1972:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:1972:10
        _RANDOM_0 = `RANDOM;	// <stdin>:1972:10
        _RANDOM_1 = `RANDOM;	// <stdin>:1972:10
        _RANDOM_2 = `RANDOM;	// <stdin>:1972:10
        _RANDOM_3 = `RANDOM;	// <stdin>:1972:10
        _RANDOM_4 = `RANDOM;	// <stdin>:1972:10
        _RANDOM_5 = `RANDOM;	// <stdin>:1972:10
        _RANDOM_6 = `RANDOM;	// <stdin>:1972:10
        _RANDOM_7 = `RANDOM;	// <stdin>:1972:10
        reg_readData = {_RANDOM_0, _RANDOM_1};	// LS_WB.scala:13:22
        reg_exOut = {_RANDOM_2, _RANDOM_3};	// LS_WB.scala:13:22
        reg_rd = _RANDOM_4[4:0];	// LS_WB.scala:13:22
        reg_csrID = _RANDOM_4[16:5];	// LS_WB.scala:13:22
        reg_ctrl2WBU_regWrite = _RANDOM_4[17];	// LS_WB.scala:13:22
        reg_ctrl2WBU_csrWrite = _RANDOM_4[18];	// LS_WB.scala:13:22
        reg_ctrl2WBU_memtoReg = _RANDOM_4[19];	// LS_WB.scala:13:22
        reg_commit_pc = {_RANDOM_4[31:20], _RANDOM_5, _RANDOM_6[19:0]};	// LS_WB.scala:13:22
        reg_instr_instr = {_RANDOM_6[31:20], _RANDOM_7[19:0]};	// LS_WB.scala:13:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:1972:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:1972:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_out_readData = reg_readData;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_exOut = reg_exOut;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_rd = reg_rd;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_csrID = reg_csrID;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_ctrl2WBU_regWrite = reg_ctrl2WBU_regWrite;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_ctrl2WBU_csrWrite = reg_ctrl2WBU_csrWrite;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_ctrl2WBU_memtoReg = reg_ctrl2WBU_memtoReg;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_commit_pc = reg_commit_pc;	// <stdin>:1972:10, LS_WB.scala:13:22
  assign io_out_instr_instr = reg_instr_instr;	// <stdin>:1972:10, LS_WB.scala:13:22
endmodule

module AXI4_LiteArbiter(	// <stdin>:1990:10
  input         IFU_AR_m2sARvalid,
  input  [31:0] IFU_AR_m2sARaddr,
  input         IFU_R_m2sRready,
                LSU_AR_m2sARvalid,
  input  [31:0] LSU_AR_m2sARaddr,
  input         LSU_R_m2sRready,
                Arbit_R_s2mRvalid,
  input  [1:0]  Arbit_R_s2mRresp,
  input  [63:0] Arbit_R_s2mRdata,
  output        IFU_R_s2mRvalid,
  output [1:0]  IFU_R_s2mRresp,
  output [63:0] IFU_R_s2mRdata,
  output        LSU_R_s2mRvalid,
  output [63:0] LSU_R_s2mRdata,
  output        Arbit_AR_m2sARvalid,
  output [31:0] Arbit_AR_m2sARaddr,
  output        Arbit_R_m2sRready);

  wire _T_2 = IFU_AR_m2sARvalid & LSU_AR_m2sARvalid;	// Arbiter.scala:20:39
  wire _T_6 = IFU_AR_m2sARvalid & ~LSU_AR_m2sARvalid;	// Arbiter.scala:29:45, :30:10
  wire _T_10 = ~IFU_AR_m2sARvalid & LSU_AR_m2sARvalid;	// Arbiter.scala:38:{21,47}
  wire _GEN = _T_2 | ~_T_6;	// Arbiter.scala:20:39, :21:35, :27:41, :29:45, :30:38
  assign IFU_R_s2mRvalid = ~_T_2 & _T_6 & Arbit_R_s2mRvalid;	// <stdin>:1990:10, Arbiter.scala:20:39, :21:35, :26:41, :29:45, :30:38
  assign IFU_R_s2mRresp = _GEN ? 2'h0 : Arbit_R_s2mRresp;	// <stdin>:1990:10, Arbiter.scala:21:35, :27:41, :28:41, :30:38
  assign IFU_R_s2mRdata = _GEN ? 64'h0 : Arbit_R_s2mRdata;	// <stdin>:1990:10, Arbiter.scala:21:35, :27:41, :30:38
  assign LSU_R_s2mRvalid = (_T_2 | ~_T_6 & _T_10) & Arbit_R_s2mRvalid;	// <stdin>:1990:10, Arbiter.scala:20:39, :21:35, :24:25, :27:41, :29:45, :30:38, :35:41, :38:47, :39:36
  assign LSU_R_s2mRdata = _T_2 | ~(_T_6 | ~_T_10) ? Arbit_R_s2mRdata : 64'h0;	// <stdin>:1990:10, Arbiter.scala:20:39, :21:35, :24:25, :27:41, :29:45, :30:38, :36:41, :38:47, :39:36
  assign Arbit_AR_m2sARvalid = _T_2 ? LSU_AR_m2sARvalid : _T_6 ? IFU_AR_m2sARvalid : _T_10 & LSU_AR_m2sARvalid;	// <stdin>:1990:10, Arbiter.scala:20:39, :21:35, :23:25, :29:45, :30:38, :32:25, :38:47, :39:36, :41:25, :49:41
  assign Arbit_AR_m2sARaddr = _T_2 ? LSU_AR_m2sARaddr : _T_6 ? IFU_AR_m2sARaddr : _T_10 ? LSU_AR_m2sARaddr : 32'h0;	// <stdin>:1990:10, Arbiter.scala:20:39, :21:35, :23:25, :29:45, :30:38, :32:25, :38:47, :39:36, :41:25, :51:41
  assign Arbit_R_m2sRready = _T_2 ? LSU_R_m2sRready : _T_6 ? IFU_R_m2sRready : _T_10 & LSU_R_m2sRready;	// <stdin>:1990:10, Arbiter.scala:20:39, :21:35, :24:25, :29:45, :30:38, :33:25, :38:47, :39:36, :42:25, :50:41
endmodule

// external module MEM

module TP_SRAM(	// <stdin>:2054:10
  input         clock,
                reset,
                io_AR_m2sARvalid,
  input  [31:0] io_AR_m2sARaddr,
  input         io_R_m2sRready,
                io_AW_m2sAWvalid,
  input  [31:0] io_AW_m2sAWaddr,
  input         io_W_m2sWvalid,
  input  [63:0] io_W_m2sWdata,
  input  [7:0]  io_W_m2sWstrb,
  output        io_R_s2mRvalid,
  output [1:0]  io_R_s2mRresp,
  output [63:0] io_R_s2mRdata);

  reg rWriteStatuOK;	// TP_SRAM.scala:29:36
  reg rReadStatuOK;	// TP_SRAM.scala:30:36
  always @(posedge clock) begin
    if (reset) begin
      rWriteStatuOK <= 1'h0;	// TP_SRAM.scala:29:36
      rReadStatuOK <= 1'h0;	// TP_SRAM.scala:29:36, :30:36
    end
    else begin
      rWriteStatuOK <= io_AW_m2sAWvalid & io_W_m2sWvalid & ~rWriteStatuOK;	// TP_SRAM.scala:29:36, :47:32, :48:17
      rReadStatuOK <= io_AR_m2sARvalid & ~rReadStatuOK;	// TP_SRAM.scala:30:36, :60:34, :61:17
    end
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2054:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2054:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2054:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2054:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2054:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2054:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2054:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2054:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2054:10
        rWriteStatuOK = _RANDOM_0[0];	// TP_SRAM.scala:29:36
        rReadStatuOK = _RANDOM_0[1];	// TP_SRAM.scala:29:36, :30:36
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2054:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2054:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  MEM mem (	// TP_SRAM.scala:25:25
    .iRen       (rReadStatuOK),	// TP_SRAM.scala:30:36
    .iWen       (rWriteStatuOK),	// TP_SRAM.scala:29:36
    .iReadAddr  (io_AR_m2sARaddr),
    .iWriteAddr (io_AW_m2sAWaddr),
    .iByteMask  (io_W_m2sWstrb),
    .iWriteData (io_W_m2sWdata),
    .oReadData  (io_R_s2mRdata)
  );
  assign io_R_s2mRvalid = rReadStatuOK;	// <stdin>:2054:10, TP_SRAM.scala:30:36
  assign io_R_s2mRresp = {~io_R_m2sRready, 1'h0};	// <stdin>:2054:10, TP_SRAM.scala:29:36, :67:29
endmodule

module TopMain(	// <stdin>:2097:10
  input         clock,
                reset,
  output [63:0] gpr_zero,
                gpr_ra,
                gpr_sp,
                gpr_gp,
                gpr_tp,
                gpr_t0,
                gpr_t1,
                gpr_t2,
                gpr_s0,
                gpr_s1,
                gpr_a0,
                gpr_a1,
                gpr_a2,
                gpr_a3,
                gpr_a4,
                gpr_a5,
                gpr_a6,
                gpr_a7,
                gpr_s2,
                gpr_s3,
                gpr_s4,
                gpr_s5,
                gpr_s6,
                gpr_s7,
                gpr_s8,
                gpr_s9,
                gpr_s10,
                gpr_s11,
                gpr_t3,
                gpr_t4,
                gpr_t5,
                gpr_t6,
                csrDebug_mstatus,
                csrDebug_mtvec,
                csrDebug_mepc,
                csrDebug_mcause,
  output [31:0] debug_instr_instr,
  output [63:0] debug_commit_pc,
                debug_dynamic_pc,
  output        debug_hazard_stallF,
                debug_hazard_stallD,
                debug_hazard_flushE,
  output [1:0]  debug_hazard_hu_exu_ctrl_forwardA,
                debug_hazard_hu_exu_ctrl_forwardB,
                debug_hazard_hu_idu_ctrl_forwardA,
                debug_hazard_hu_idu_ctrl_forwardB,
  output [63:0] debug_probe_data,
                debug_alu_data_E_data,
                debug_alu_data_W_data,
  output [1:0]  debug_forwardA_data,
                debug_forwardB_data,
                debug_forward_idu_A_data,
                debug_forward_idu_B_data,
  output [63:0] debug_alu_srcA_data,
                debug_alu_srcB_data,
  output [4:0]  debug_rdD_data,
                debug_rdE_data,
                debug_rdM_data,
                debug_rdW_data,
  output [63:0] pipelineTrace_if_id_pc_pc,
  output [31:0] pipelineTrace_if_id_instr_instr,
  output        pipelineTrace_if_id_pcEnable,
  output [63:0] pipelineTrace_id_ex_pc_pc,
  output [31:0] pipelineTrace_id_ex_instr_instr,
  output        pipelineTrace_id_ex_pcEnable,
  output [63:0] pipelineTrace_ex_ls_pc_pc,
  output [31:0] pipelineTrace_ex_ls_instr_instr,
  output        pipelineTrace_ex_ls_pcEnable,
  output [63:0] pipelineTrace_ls_wb_pc_pc,
  output [31:0] pipelineTrace_ls_wb_instr_instr,
  output        pipelineTrace_ls_wb_pcEnable,
  output [63:0] pipelineTrace_rf_pc_pc,
  output [31:0] pipelineTrace_rf_instr_instr,
  output        pipelineTrace_rf_pcEnable,
  output [63:0] jumpTrace_dynamic_pc,
  output        jumpTrace_instr_jump,
                jumpTrace_instr_branch,
                jumpTrace_instr_pcPlusSrc,
                jumpTrace_idu_pcSrc,
  output [63:0] jumpTrace_bruSrcA,
                jumpTrace_bruSrcB,
  output        jumpTrace_bruOutC,
  output [3:0]  jumpTrace_bruCtrl);

  wire        __TP_SRAM_io_R_s2mRvalid;	// TopMain.scala:32:30
  wire [1:0]  __TP_SRAM_io_R_s2mRresp;	// TopMain.scala:32:30
  wire [63:0] __TP_SRAM_io_R_s2mRdata;	// TopMain.scala:32:30
  wire        __Arbiter_IFU_R_s2mRvalid;	// TopMain.scala:31:30
  wire [1:0]  __Arbiter_IFU_R_s2mRresp;	// TopMain.scala:31:30
  wire [63:0] __Arbiter_IFU_R_s2mRdata;	// TopMain.scala:31:30
  wire        __Arbiter_LSU_R_s2mRvalid;	// TopMain.scala:31:30
  wire [63:0] __Arbiter_LSU_R_s2mRdata;	// TopMain.scala:31:30
  wire        __Arbiter_Arbit_AR_m2sARvalid;	// TopMain.scala:31:30
  wire [31:0] __Arbiter_Arbit_AR_m2sARaddr;	// TopMain.scala:31:30
  wire        __Arbiter_Arbit_R_m2sRready;	// TopMain.scala:31:30
  wire [63:0] __LS_WB_io_out_readData;	// TopMain.scala:29:28
  wire [63:0] __LS_WB_io_out_exOut;	// TopMain.scala:29:28
  wire [4:0]  __LS_WB_io_out_rd;	// TopMain.scala:29:28
  wire [11:0] __LS_WB_io_out_csrID;	// TopMain.scala:29:28
  wire        __LS_WB_io_out_ctrl2WBU_regWrite;	// TopMain.scala:29:28
  wire        __LS_WB_io_out_ctrl2WBU_csrWrite;	// TopMain.scala:29:28
  wire        __LS_WB_io_out_ctrl2WBU_memtoReg;	// TopMain.scala:29:28
  wire [63:0] __LS_WB_io_out_commit_pc;	// TopMain.scala:29:28
  wire [31:0] __LS_WB_io_out_instr_instr;	// TopMain.scala:29:28
  wire [63:0] __EX_LS_io_out_aluOut;	// TopMain.scala:28:28
  wire [63:0] __EX_LS_io_out_writeData;	// TopMain.scala:28:28
  wire [4:0]  __EX_LS_io_out_rd;	// TopMain.scala:28:28
  wire [11:0] __EX_LS_io_out_csrID;	// TopMain.scala:28:28
  wire        __EX_LS_io_out_ctrl2WBU_regWrite;	// TopMain.scala:28:28
  wire        __EX_LS_io_out_ctrl2WBU_csrWrite;	// TopMain.scala:28:28
  wire        __EX_LS_io_out_ctrl2WBU_memtoReg;	// TopMain.scala:28:28
  wire [1:0]  __EX_LS_io_out_ctrl2LSU_memRW;	// TopMain.scala:28:28
  wire [2:0]  __EX_LS_io_out_ctrl2LSU_memWidth;	// TopMain.scala:28:28
  wire [63:0] __EX_LS_io_out_commit_pc;	// TopMain.scala:28:28
  wire [31:0] __EX_LS_io_out_instr_instr;	// TopMain.scala:28:28
  wire [63:0] __ID_EX_io_out_pc_pc;	// TopMain.scala:27:28
  wire [4:0]  __ID_EX_io_out_instrRegID_rs1;	// TopMain.scala:27:28
  wire [4:0]  __ID_EX_io_out_instrRegID_rs2;	// TopMain.scala:27:28
  wire [4:0]  __ID_EX_io_out_instrRegID_rd;	// TopMain.scala:27:28
  wire [63:0] __ID_EX_io_out_instrRegImm_imm;	// TopMain.scala:27:28
  wire [63:0] __ID_EX_io_out_regData_rd1;	// TopMain.scala:27:28
  wire [63:0] __ID_EX_io_out_regData_rd2;	// TopMain.scala:27:28
  wire [1:0]  __ID_EX_io_out_ctrl2EXU_aluSrcA;	// TopMain.scala:27:28
  wire [2:0]  __ID_EX_io_out_ctrl2EXU_aluSrcB;	// TopMain.scala:27:28
  wire [5:0]  __ID_EX_io_out_ctrl2EXU_aluCtrl;	// TopMain.scala:27:28
  wire        __ID_EX_io_out_ctrl2WBU_regWrite;	// TopMain.scala:27:28
  wire        __ID_EX_io_out_ctrl2WBU_csrWrite;	// TopMain.scala:27:28
  wire        __ID_EX_io_out_ctrl2WBU_memtoReg;	// TopMain.scala:27:28
  wire [1:0]  __ID_EX_io_out_ctrl2LSU_memRW;	// TopMain.scala:27:28
  wire [2:0]  __ID_EX_io_out_ctrl2LSU_memWidth;	// TopMain.scala:27:28
  wire [11:0] __ID_EX_io_out_csrID;	// TopMain.scala:27:28
  wire [63:0] __ID_EX_io_out_csrData;	// TopMain.scala:27:28
  wire [31:0] __ID_EX_io_out_instr_instr;	// TopMain.scala:27:28
  wire [31:0] __IF_ID_io_out_instr_instr;	// TopMain.scala:26:28
  wire [63:0] __IF_ID_io_out_pc_pc;	// TopMain.scala:26:28
  wire [63:0] __WBU_io_wbIO_data;	// TopMain.scala:25:26
  wire [4:0]  __WBU_io_wbIO_rd;	// TopMain.scala:25:26
  wire [11:0] __WBU_io_wbIO_csrID;	// TopMain.scala:25:26
  wire        __WBU_io_wbIO_regWrite;	// TopMain.scala:25:26
  wire        __WBU_io_wbIO_csrWrite;	// TopMain.scala:25:26
  wire        __WBU_io_hu_wbu_regWrite;	// TopMain.scala:25:26
  wire [4:0]  __WBU_io_hu_wbu_rd;	// TopMain.scala:25:26
  wire [63:0] __WBU_io_commit_pc;	// TopMain.scala:25:26
  wire [31:0] __WBU_io_instr_instr;	// TopMain.scala:25:26
  wire [63:0] __LSU_ioInternal_Pipeline_LS2WB_MsgBundle_readData;	// TopMain.scala:24:26
  wire [63:0] __LSU_ioInternal_Pipeline_LS2WB_MsgBundle_exOut;	// TopMain.scala:24:26
  wire [4:0]  __LSU_ioInternal_Pipeline_LS2WB_MsgBundle_rd;	// TopMain.scala:24:26
  wire [11:0] __LSU_ioInternal_Pipeline_LS2WB_MsgBundle_csrID;	// TopMain.scala:24:26
  wire        __LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_regWrite;	// TopMain.scala:24:26
  wire        __LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_csrWrite;	// TopMain.scala:24:26
  wire        __LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_memtoReg;	// TopMain.scala:24:26
  wire        __LSU_ioInternal_hu_lsu_memtoReg;	// TopMain.scala:24:26
  wire        __LSU_ioInternal_hu_lsu_regWrite;	// TopMain.scala:24:26
  wire [4:0]  __LSU_ioInternal_hu_lsu_rd;	// TopMain.scala:24:26
  wire [63:0] __LSU_ioInternal_oForwardData;	// TopMain.scala:24:26
  wire        __LSU_ioExternal_Read_AR_m2sARvalid;	// TopMain.scala:24:26
  wire [31:0] __LSU_ioExternal_Read_AR_m2sARaddr;	// TopMain.scala:24:26
  wire        __LSU_ioExternal_Read_R_m2sRready;	// TopMain.scala:24:26
  wire        __LSU_ioExternal_AW_m2sAWvalid;	// TopMain.scala:24:26
  wire [31:0] __LSU_ioExternal_AW_m2sAWaddr;	// TopMain.scala:24:26
  wire        __LSU_ioExternal_W_m2sWvalid;	// TopMain.scala:24:26
  wire [63:0] __LSU_ioExternal_W_m2sWdata;	// TopMain.scala:24:26
  wire [7:0]  __LSU_ioExternal_W_m2sWstrb;	// TopMain.scala:24:26
  wire [63:0] __EXU_io_ex_ls_IO_aluOut;	// TopMain.scala:23:26
  wire [63:0] __EXU_io_ex_ls_IO_writeData;	// TopMain.scala:23:26
  wire [4:0]  __EXU_io_ex_ls_IO_rd;	// TopMain.scala:23:26
  wire [11:0] __EXU_io_ex_ls_IO_csrID;	// TopMain.scala:23:26
  wire        __EXU_io_ex_ls_IO_ctrl2WBU_regWrite;	// TopMain.scala:23:26
  wire        __EXU_io_ex_ls_IO_ctrl2WBU_csrWrite;	// TopMain.scala:23:26
  wire        __EXU_io_ex_ls_IO_ctrl2WBU_memtoReg;	// TopMain.scala:23:26
  wire [1:0]  __EXU_io_ex_ls_IO_ctrl2LSU_memRW;	// TopMain.scala:23:26
  wire [2:0]  __EXU_io_ex_ls_IO_ctrl2LSU_memWidth;	// TopMain.scala:23:26
  wire [63:0] __EXU_io_ex_ls_IO_commit_pc;	// TopMain.scala:23:26
  wire [31:0] __EXU_io_ex_ls_IO_instr_instr;	// TopMain.scala:23:26
  wire [4:0]  __EXU_io_hu_exu_regID_rs1;	// TopMain.scala:23:26
  wire [4:0]  __EXU_io_hu_exu_regID_rs2;	// TopMain.scala:23:26
  wire [4:0]  __EXU_io_hu_exu_regID_rd;	// TopMain.scala:23:26
  wire        __EXU_io_hu_exu_regWrite;	// TopMain.scala:23:26
  wire        __EXU_io_hu_exu_memtoReg;	// TopMain.scala:23:26
  wire [63:0] __T_io_id_ex_IO_pc_pc;	// TopMain.scala:22:26
  wire [4:0]  __T_io_id_ex_IO_instrRegID_rs1;	// TopMain.scala:22:26
  wire [4:0]  __T_io_id_ex_IO_instrRegID_rs2;	// TopMain.scala:22:26
  wire [4:0]  __T_io_id_ex_IO_instrRegID_rd;	// TopMain.scala:22:26
  wire [63:0] __T_io_id_ex_IO_instrRegImm_imm;	// TopMain.scala:22:26
  wire [63:0] __T_io_id_ex_IO_regData_rd1;	// TopMain.scala:22:26
  wire [63:0] __T_io_id_ex_IO_regData_rd2;	// TopMain.scala:22:26
  wire [1:0]  __T_io_id_ex_IO_ctrl2EXU_aluSrcA;	// TopMain.scala:22:26
  wire [2:0]  __T_io_id_ex_IO_ctrl2EXU_aluSrcB;	// TopMain.scala:22:26
  wire [5:0]  __T_io_id_ex_IO_ctrl2EXU_aluCtrl;	// TopMain.scala:22:26
  wire        __T_io_id_ex_IO_ctrl2WBU_regWrite;	// TopMain.scala:22:26
  wire        __T_io_id_ex_IO_ctrl2WBU_csrWrite;	// TopMain.scala:22:26
  wire        __T_io_id_ex_IO_ctrl2WBU_memtoReg;	// TopMain.scala:22:26
  wire [1:0]  __T_io_id_ex_IO_ctrl2LSU_memRW;	// TopMain.scala:22:26
  wire [2:0]  __T_io_id_ex_IO_ctrl2LSU_memWidth;	// TopMain.scala:22:26
  wire [11:0] __T_io_id_ex_IO_csrID;	// TopMain.scala:22:26
  wire [63:0] __T_io_id_ex_IO_csrData;	// TopMain.scala:22:26
  wire [31:0] __T_io_id_ex_IO_instr_instr;	// TopMain.scala:22:26
  wire        __T_io_hu_idu_jump;	// TopMain.scala:22:26
  wire        __T_io_hu_idu_branch;	// TopMain.scala:22:26
  wire        __T_io_hu_idu_pcPlusSrc;	// TopMain.scala:22:26
  wire [4:0]  __T_io_hu_idu_rs1;	// TopMain.scala:22:26
  wire [4:0]  __T_io_hu_idu_rs2;	// TopMain.scala:22:26
  wire [63:0] __T_io_npc_pc;	// TopMain.scala:22:26
  wire [63:0] __T_io_mepc;	// TopMain.scala:22:26
  wire        __T_io_pcSrc;	// TopMain.scala:22:26
  wire [1:0]  __T_io_instr_jump;	// TopMain.scala:22:26
  wire [63:0] __T_3_ioInternal_oPCPlus4;	// TopMain.scala:21:26
  wire        __T_3_ioInternal_oFeedBackPCChange;	// TopMain.scala:21:26
  wire [31:0] __T_3_ioInternal_Pipeline_IF2ID_MsgBunlde_instr_instr;	// TopMain.scala:21:26
  wire [63:0] __T_3_ioInternal_Pipeline_IF2ID_MsgBunlde_pc_pc;	// TopMain.scala:21:26
  wire        __T_3_ioExternal_AR_m2sARvalid;	// TopMain.scala:21:26
  wire [31:0] __T_3_ioExternal_AR_m2sARaddr;	// TopMain.scala:21:26
  wire        __T_3_ioExternal_R_m2sRready;	// TopMain.scala:21:26
  wire        __HU_io_stallF;	// TopMain.scala:20:25
  wire        __HU_io_stallD;	// TopMain.scala:20:25
  wire        __HU_io_flushE;	// TopMain.scala:20:25
  wire [1:0]  __HU_io_hu_idu_forwardCtrl_forwardA;	// TopMain.scala:20:25
  wire [1:0]  __HU_io_hu_idu_forwardCtrl_forwardB;	// TopMain.scala:20:25
  wire [1:0]  __HU_io_hu_exu_forwardCtrl_forwardA;	// TopMain.scala:20:25
  wire [1:0]  __HU_io_hu_exu_forwardCtrl_forwardB;	// TopMain.scala:20:25
  reg  [63:0] rPC;	// TopMain.scala:39:26
  reg  [63:0] rNPC;	// TopMain.scala:40:27
  reg         rNPCValid;	// TopMain.scala:41:32
  wire [63:0] npc = rNPCValid ? rNPC : __T_io_pcSrc ? __T_io_npc_pc : __T_3_ioInternal_oPCPlus4;	// Mux.scala:81:58, TopMain.scala:21:26, :22:26, :40:27, :41:32, :59:22
  reg  [63:0] pc_rf_pc;	// TopMain.scala:110:34
  reg  [31:0] instr_rf_instr;	// TopMain.scala:111:34
  reg         pcEnable_if_id;	// TopMain.scala:112:42
  reg         pcEnable_id_ex;	// TopMain.scala:113:42
  reg         pcEnable_ex_ls;	// TopMain.scala:114:42
  reg         pcEnable_ls_wb;	// TopMain.scala:115:42
  reg         pcEnable_rf;	// TopMain.scala:116:42
  always @(posedge clock) begin
    if (reset) begin
      rPC <= 64'h80000000;	// TopMain.scala:39:26
      rNPC <= 64'h80000000;	// TopMain.scala:39:26, :40:27
      rNPCValid <= 1'h0;	// TopMain.scala:41:32
    end
    else begin
      if (~__HU_io_stallF & __T_3_ioInternal_oFeedBackPCChange) begin	// TopMain.scala:20:25, :21:26, :61:{20,35}
        if (rNPCValid)	// TopMain.scala:41:32
          rPC <= rNPC;	// TopMain.scala:39:26, :40:27
        else if (__T_io_pcSrc)	// TopMain.scala:22:26, :41:32
          rPC <= __T_io_npc_pc;	// TopMain.scala:22:26, :39:26
        else	// TopMain.scala:22:26, :41:32
          rPC <= __T_3_ioInternal_oPCPlus4;	// TopMain.scala:21:26, :39:26
      end
      if (rNPCValid) begin	// TopMain.scala:41:32
      end
      else if (__T_io_pcSrc)	// TopMain.scala:22:26, :41:32
        rNPC <= __T_io_npc_pc;	// TopMain.scala:22:26, :40:27
      else	// TopMain.scala:22:26, :41:32
        rNPC <= __T_3_ioInternal_oPCPlus4;	// TopMain.scala:21:26, :40:27
      rNPCValid <= __T_io_pcSrc & ~__T_3_ioInternal_oFeedBackPCChange | ~(__T_3_ioInternal_oFeedBackPCChange &
                                                rNPCValid) & rNPCValid;	// TopMain.scala:21:26, :22:26, :41:32, :63:{37,58,70}, :64:27, :65:{49,73}, :66:27
    end
    pc_rf_pc <= __WBU_io_commit_pc;	// TopMain.scala:25:26, :110:34
    instr_rf_instr <= __WBU_io_instr_instr;	// TopMain.scala:25:26, :111:34
    pcEnable_if_id <= __T_3_ioInternal_oFeedBackPCChange;	// TopMain.scala:21:26, :112:42
    pcEnable_id_ex <= pcEnable_if_id;	// TopMain.scala:112:42, :113:42
    pcEnable_ex_ls <= pcEnable_id_ex;	// TopMain.scala:113:42, :114:42
    pcEnable_ls_wb <= pcEnable_ex_ls;	// TopMain.scala:114:42, :115:42
    pcEnable_rf <= pcEnable_ls_wb;	// TopMain.scala:115:42, :116:42
  end // always @(posedge)
  `ifndef SYNTHESIS	// <stdin>:2097:10
    `ifdef FIRRTL_BEFORE_INITIAL	// <stdin>:2097:10
      `FIRRTL_BEFORE_INITIAL	// <stdin>:2097:10
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_0;	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_1;	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_2;	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_3;	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_4;	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_5;	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_6;	// <stdin>:2097:10
      automatic logic [31:0] _RANDOM_7;	// <stdin>:2097:10
      `ifdef INIT_RANDOM_PROLOG_	// <stdin>:2097:10
        `INIT_RANDOM_PROLOG_	// <stdin>:2097:10
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// <stdin>:2097:10
        _RANDOM_0 = `RANDOM;	// <stdin>:2097:10
        _RANDOM_1 = `RANDOM;	// <stdin>:2097:10
        _RANDOM_2 = `RANDOM;	// <stdin>:2097:10
        _RANDOM_3 = `RANDOM;	// <stdin>:2097:10
        _RANDOM_4 = `RANDOM;	// <stdin>:2097:10
        _RANDOM_5 = `RANDOM;	// <stdin>:2097:10
        _RANDOM_6 = `RANDOM;	// <stdin>:2097:10
        _RANDOM_7 = `RANDOM;	// <stdin>:2097:10
        rPC = {_RANDOM_0, _RANDOM_1};	// TopMain.scala:39:26
        rNPC = {_RANDOM_2, _RANDOM_3};	// TopMain.scala:40:27
        rNPCValid = _RANDOM_4[0];	// TopMain.scala:41:32
        pc_rf_pc = {_RANDOM_4[31:1], _RANDOM_5, _RANDOM_6[0]};	// TopMain.scala:41:32, :110:34
        instr_rf_instr = {_RANDOM_6[31:1], _RANDOM_7[0]};	// TopMain.scala:110:34, :111:34
        pcEnable_if_id = _RANDOM_7[1];	// TopMain.scala:111:34, :112:42
        pcEnable_id_ex = _RANDOM_7[2];	// TopMain.scala:111:34, :113:42
        pcEnable_ex_ls = _RANDOM_7[3];	// TopMain.scala:111:34, :114:42
        pcEnable_ls_wb = _RANDOM_7[4];	// TopMain.scala:111:34, :115:42
        pcEnable_rf = _RANDOM_7[5];	// TopMain.scala:111:34, :116:42
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// <stdin>:2097:10
      `FIRRTL_AFTER_INITIAL	// <stdin>:2097:10
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  HazardUnit _HU (	// TopMain.scala:20:25
    .io_hu_idu_jump                        (__T_io_hu_idu_jump),	// TopMain.scala:22:26
    .io_hu_idu_branch                      (__T_io_hu_idu_branch),	// TopMain.scala:22:26
    .io_hu_idu_pcPlusSrc                   (__T_io_hu_idu_pcPlusSrc),	// TopMain.scala:22:26
    .io_hu_idu_rs1                         (__T_io_hu_idu_rs1),	// TopMain.scala:22:26
    .io_hu_idu_rs2                         (__T_io_hu_idu_rs2),	// TopMain.scala:22:26
    .io_hu_exu_regID_rs1                   (__EXU_io_hu_exu_regID_rs1),	// TopMain.scala:23:26
    .io_hu_exu_regID_rs2                   (__EXU_io_hu_exu_regID_rs2),	// TopMain.scala:23:26
    .io_hu_exu_regID_rd                    (__EXU_io_hu_exu_regID_rd),	// TopMain.scala:23:26
    .io_hu_exu_regWrite                    (__EXU_io_hu_exu_regWrite),	// TopMain.scala:23:26
    .io_hu_exu_memtoReg                    (__EXU_io_hu_exu_memtoReg),	// TopMain.scala:23:26
    .io_hu_lsu_memtoReg                    (__LSU_ioInternal_hu_lsu_memtoReg),	// TopMain.scala:24:26
    .io_hu_lsu_regWrite                    (__LSU_ioInternal_hu_lsu_regWrite),	// TopMain.scala:24:26
    .io_hu_lsu_rd                          (__LSU_ioInternal_hu_lsu_rd),	// TopMain.scala:24:26
    .io_hu_wbu_regWrite                    (__WBU_io_hu_wbu_regWrite),	// TopMain.scala:25:26
    .io_hu_wbu_rd                          (__WBU_io_hu_wbu_rd),	// TopMain.scala:25:26
    .io_stallF                             (__HU_io_stallF),
    .io_stallD                             (__HU_io_stallD),
    .io_flushE                             (__HU_io_flushE),
    .io_hu_idu_forwardCtrl_forwardA        (__HU_io_hu_idu_forwardCtrl_forwardA),
    .io_hu_idu_forwardCtrl_forwardB        (__HU_io_hu_idu_forwardCtrl_forwardB),
    .io_hu_exu_forwardCtrl_forwardA        (__HU_io_hu_exu_forwardCtrl_forwardA),
    .io_hu_exu_forwardCtrl_forwardB        (__HU_io_hu_exu_forwardCtrl_forwardB),
    .io_hazardDebugIO_stallF               (debug_hazard_stallF),
    .io_hazardDebugIO_stallD               (debug_hazard_stallD),
    .io_hazardDebugIO_flushE               (debug_hazard_flushE),
    .io_hazardDebugIO_hu_exu_ctrl_forwardA (debug_hazard_hu_exu_ctrl_forwardA),
    .io_hazardDebugIO_hu_exu_ctrl_forwardB (debug_hazard_hu_exu_ctrl_forwardB),
    .io_hazardDebugIO_hu_idu_ctrl_forwardA (debug_hazard_hu_idu_ctrl_forwardA),
    .io_hazardDebugIO_hu_idu_ctrl_forwardB (debug_hazard_hu_idu_ctrl_forwardB)
  );
  IFU _T_3 (	// TopMain.scala:21:26
    .ioInternal_iPC                                  (rPC),	// TopMain.scala:39:26
    .ioExternal_R_s2mRvalid                          (__Arbiter_IFU_R_s2mRvalid),	// TopMain.scala:31:30
    .ioExternal_R_s2mRresp                           (__Arbiter_IFU_R_s2mRresp),	// TopMain.scala:31:30
    .ioExternal_R_s2mRdata                           (__Arbiter_IFU_R_s2mRdata),	// TopMain.scala:31:30
    .ioInternal_oPCPlus4                             (__T_3_ioInternal_oPCPlus4),
    .ioInternal_oFeedBackPCChange                    (__T_3_ioInternal_oFeedBackPCChange),
    .ioInternal_Pipeline_IF2ID_MsgBunlde_instr_instr (__T_3_ioInternal_Pipeline_IF2ID_MsgBunlde_instr_instr),
    .ioInternal_Pipeline_IF2ID_MsgBunlde_pc_pc       (__T_3_ioInternal_Pipeline_IF2ID_MsgBunlde_pc_pc),
    .ioExternal_AR_m2sARvalid                        (__T_3_ioExternal_AR_m2sARvalid),
    .ioExternal_AR_m2sARaddr                         (__T_3_ioExternal_AR_m2sARaddr),
    .ioExternal_R_m2sRready                          (__T_3_ioExternal_R_m2sRready)
  );
  IDU _T (	// TopMain.scala:22:26
    .clock                          (clock),
    .io_if_id_IO_instr_instr        (__IF_ID_io_out_instr_instr),	// TopMain.scala:26:28
    .io_if_id_IO_pc_pc              (__IF_ID_io_out_pc_pc),	// TopMain.scala:26:28
    .io_hu_idu_forwardCtrl_forwardA (__HU_io_hu_idu_forwardCtrl_forwardA),	// TopMain.scala:20:25
    .io_hu_idu_forwardCtrl_forwardB (__HU_io_hu_idu_forwardCtrl_forwardB),	// TopMain.scala:20:25
    .io_forwardDataM                (__LSU_ioInternal_oForwardData),	// TopMain.scala:24:26
    .io_wb_data                     (__WBU_io_wbIO_data),	// TopMain.scala:25:26
    .io_wb_rd                       (__WBU_io_wbIO_rd),	// TopMain.scala:25:26
    .io_wb_csrID                    (__WBU_io_wbIO_csrID),	// TopMain.scala:25:26
    .io_wb_regWrite                 (__WBU_io_wbIO_regWrite),	// TopMain.scala:25:26
    .io_wb_csrWrite                 (__WBU_io_wbIO_csrWrite),	// TopMain.scala:25:26
    .io_id_ex_IO_pc_pc              (__T_io_id_ex_IO_pc_pc),
    .io_id_ex_IO_instrRegID_rs1     (__T_io_id_ex_IO_instrRegID_rs1),
    .io_id_ex_IO_instrRegID_rs2     (__T_io_id_ex_IO_instrRegID_rs2),
    .io_id_ex_IO_instrRegID_rd      (__T_io_id_ex_IO_instrRegID_rd),
    .io_id_ex_IO_instrRegImm_imm    (__T_io_id_ex_IO_instrRegImm_imm),
    .io_id_ex_IO_regData_rd1        (__T_io_id_ex_IO_regData_rd1),
    .io_id_ex_IO_regData_rd2        (__T_io_id_ex_IO_regData_rd2),
    .io_id_ex_IO_ctrl2EXU_aluSrcA   (__T_io_id_ex_IO_ctrl2EXU_aluSrcA),
    .io_id_ex_IO_ctrl2EXU_aluSrcB   (__T_io_id_ex_IO_ctrl2EXU_aluSrcB),
    .io_id_ex_IO_ctrl2EXU_aluCtrl   (__T_io_id_ex_IO_ctrl2EXU_aluCtrl),
    .io_id_ex_IO_ctrl2WBU_regWrite  (__T_io_id_ex_IO_ctrl2WBU_regWrite),
    .io_id_ex_IO_ctrl2WBU_csrWrite  (__T_io_id_ex_IO_ctrl2WBU_csrWrite),
    .io_id_ex_IO_ctrl2WBU_memtoReg  (__T_io_id_ex_IO_ctrl2WBU_memtoReg),
    .io_id_ex_IO_ctrl2LSU_memRW     (__T_io_id_ex_IO_ctrl2LSU_memRW),
    .io_id_ex_IO_ctrl2LSU_memWidth  (__T_io_id_ex_IO_ctrl2LSU_memWidth),
    .io_id_ex_IO_csrID              (__T_io_id_ex_IO_csrID),
    .io_id_ex_IO_csrData            (__T_io_id_ex_IO_csrData),
    .io_id_ex_IO_instr_instr        (__T_io_id_ex_IO_instr_instr),
    .io_hu_idu_jump                 (__T_io_hu_idu_jump),
    .io_hu_idu_branch               (__T_io_hu_idu_branch),
    .io_hu_idu_pcPlusSrc            (__T_io_hu_idu_pcPlusSrc),
    .io_hu_idu_rs1                  (__T_io_hu_idu_rs1),
    .io_hu_idu_rs2                  (__T_io_hu_idu_rs2),
    .io_npc_pc                      (__T_io_npc_pc),
    .io_mepc                        (__T_io_mepc),
    .io_pcSrc                       (__T_io_pcSrc),
    .io_gpr_zero                    (gpr_zero),
    .io_gpr_ra                      (gpr_ra),
    .io_gpr_sp                      (gpr_sp),
    .io_gpr_gp                      (gpr_gp),
    .io_gpr_tp                      (gpr_tp),
    .io_gpr_t0                      (gpr_t0),
    .io_gpr_t1                      (gpr_t1),
    .io_gpr_t2                      (gpr_t2),
    .io_gpr_s0                      (gpr_s0),
    .io_gpr_s1                      (gpr_s1),
    .io_gpr_a0                      (gpr_a0),
    .io_gpr_a1                      (gpr_a1),
    .io_gpr_a2                      (gpr_a2),
    .io_gpr_a3                      (gpr_a3),
    .io_gpr_a4                      (gpr_a4),
    .io_gpr_a5                      (gpr_a5),
    .io_gpr_a6                      (gpr_a6),
    .io_gpr_a7                      (gpr_a7),
    .io_gpr_s2                      (gpr_s2),
    .io_gpr_s3                      (gpr_s3),
    .io_gpr_s4                      (gpr_s4),
    .io_gpr_s5                      (gpr_s5),
    .io_gpr_s6                      (gpr_s6),
    .io_gpr_s7                      (gpr_s7),
    .io_gpr_s8                      (gpr_s8),
    .io_gpr_s9                      (gpr_s9),
    .io_gpr_s10                     (gpr_s10),
    .io_gpr_s11                     (gpr_s11),
    .io_gpr_t3                      (gpr_t3),
    .io_gpr_t4                      (gpr_t4),
    .io_gpr_t5                      (gpr_t5),
    .io_gpr_t6                      (gpr_t6),
    .io_csrDebug_mstatus            (csrDebug_mstatus),
    .io_csrDebug_mtvec              (csrDebug_mtvec),
    .io_csrDebug_mepc               (csrDebug_mepc),
    .io_csrDebug_mcause             (csrDebug_mcause),
    .io_instr_jump                  (__T_io_instr_jump),
    .io_instr_branch                (jumpTrace_instr_branch),
    .io_instr_pcPlusSrc             (jumpTrace_instr_pcPlusSrc),
    .io_bruSrcA                     (jumpTrace_bruSrcA),
    .io_bruSrcB                     (jumpTrace_bruSrcB),
    .io_bruOutC                     (jumpTrace_bruOutC),
    .io_bruCtrl                     (jumpTrace_bruCtrl)
  );
  EXU _EXU (	// TopMain.scala:23:26
    .io_id_ex_IO_pc_pc              (__ID_EX_io_out_pc_pc),	// TopMain.scala:27:28
    .io_id_ex_IO_instrRegID_rs1     (__ID_EX_io_out_instrRegID_rs1),	// TopMain.scala:27:28
    .io_id_ex_IO_instrRegID_rs2     (__ID_EX_io_out_instrRegID_rs2),	// TopMain.scala:27:28
    .io_id_ex_IO_instrRegID_rd      (__ID_EX_io_out_instrRegID_rd),	// TopMain.scala:27:28
    .io_id_ex_IO_instrRegImm_imm    (__ID_EX_io_out_instrRegImm_imm),	// TopMain.scala:27:28
    .io_id_ex_IO_regData_rd1        (__ID_EX_io_out_regData_rd1),	// TopMain.scala:27:28
    .io_id_ex_IO_regData_rd2        (__ID_EX_io_out_regData_rd2),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2EXU_aluSrcA   (__ID_EX_io_out_ctrl2EXU_aluSrcA),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2EXU_aluSrcB   (__ID_EX_io_out_ctrl2EXU_aluSrcB),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2EXU_aluCtrl   (__ID_EX_io_out_ctrl2EXU_aluCtrl),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2WBU_regWrite  (__ID_EX_io_out_ctrl2WBU_regWrite),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2WBU_csrWrite  (__ID_EX_io_out_ctrl2WBU_csrWrite),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2WBU_memtoReg  (__ID_EX_io_out_ctrl2WBU_memtoReg),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2LSU_memRW     (__ID_EX_io_out_ctrl2LSU_memRW),	// TopMain.scala:27:28
    .io_id_ex_IO_ctrl2LSU_memWidth  (__ID_EX_io_out_ctrl2LSU_memWidth),	// TopMain.scala:27:28
    .io_id_ex_IO_csrID              (__ID_EX_io_out_csrID),	// TopMain.scala:27:28
    .io_id_ex_IO_csrData            (__ID_EX_io_out_csrData),	// TopMain.scala:27:28
    .io_id_ex_IO_instr_instr        (__ID_EX_io_out_instr_instr),	// TopMain.scala:27:28
    .io_hu_exu_forwardCtrl_forwardA (__HU_io_hu_exu_forwardCtrl_forwardA),	// TopMain.scala:20:25
    .io_hu_exu_forwardCtrl_forwardB (__HU_io_hu_exu_forwardCtrl_forwardB),	// TopMain.scala:20:25
    .io_forwardDataM                (__LSU_ioInternal_oForwardData),	// TopMain.scala:24:26
    .io_forwardDataW                (__WBU_io_wbIO_data),	// TopMain.scala:25:26
    .io_ex_ls_IO_aluOut             (__EXU_io_ex_ls_IO_aluOut),
    .io_ex_ls_IO_writeData          (__EXU_io_ex_ls_IO_writeData),
    .io_ex_ls_IO_rd                 (__EXU_io_ex_ls_IO_rd),
    .io_ex_ls_IO_csrID              (__EXU_io_ex_ls_IO_csrID),
    .io_ex_ls_IO_ctrl2WBU_regWrite  (__EXU_io_ex_ls_IO_ctrl2WBU_regWrite),
    .io_ex_ls_IO_ctrl2WBU_csrWrite  (__EXU_io_ex_ls_IO_ctrl2WBU_csrWrite),
    .io_ex_ls_IO_ctrl2WBU_memtoReg  (__EXU_io_ex_ls_IO_ctrl2WBU_memtoReg),
    .io_ex_ls_IO_ctrl2LSU_memRW     (__EXU_io_ex_ls_IO_ctrl2LSU_memRW),
    .io_ex_ls_IO_ctrl2LSU_memWidth  (__EXU_io_ex_ls_IO_ctrl2LSU_memWidth),
    .io_ex_ls_IO_commit_pc          (__EXU_io_ex_ls_IO_commit_pc),
    .io_ex_ls_IO_instr_instr        (__EXU_io_ex_ls_IO_instr_instr),
    .io_hu_exu_regID_rs1            (__EXU_io_hu_exu_regID_rs1),
    .io_hu_exu_regID_rs2            (__EXU_io_hu_exu_regID_rs2),
    .io_hu_exu_regID_rd             (__EXU_io_hu_exu_regID_rd),
    .io_hu_exu_regWrite             (__EXU_io_hu_exu_regWrite),
    .io_hu_exu_memtoReg             (__EXU_io_hu_exu_memtoReg),
    .io_alu_srcA_data               (debug_alu_srcA_data),
    .io_alu_srcB_data               (debug_alu_srcB_data)
  );
  LSU _LSU (	// TopMain.scala:24:26
    .ioInternal_Pipeline_EX2LS_MsgBundle_aluOut            (__EX_LS_io_out_aluOut),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_writeData         (__EX_LS_io_out_writeData),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_rd                (__EX_LS_io_out_rd),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_csrID             (__EX_LS_io_out_csrID),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_regWrite (__EX_LS_io_out_ctrl2WBU_regWrite),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_csrWrite (__EX_LS_io_out_ctrl2WBU_csrWrite),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2WBU_memtoReg (__EX_LS_io_out_ctrl2WBU_memtoReg),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memRW    (__EX_LS_io_out_ctrl2LSU_memRW),	// TopMain.scala:28:28
    .ioInternal_Pipeline_EX2LS_MsgBundle_ctrl2LSU_memWidth (__EX_LS_io_out_ctrl2LSU_memWidth),	// TopMain.scala:28:28
    .ioExternal_Read_R_s2mRvalid                           (__Arbiter_LSU_R_s2mRvalid),	// TopMain.scala:31:30
    .ioExternal_Read_R_s2mRdata                            (__Arbiter_LSU_R_s2mRdata),	// TopMain.scala:31:30
    .ioInternal_Pipeline_LS2WB_MsgBundle_readData          (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_readData),
    .ioInternal_Pipeline_LS2WB_MsgBundle_exOut             (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_exOut),
    .ioInternal_Pipeline_LS2WB_MsgBundle_rd                (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_rd),
    .ioInternal_Pipeline_LS2WB_MsgBundle_csrID             (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_csrID),
    .ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_regWrite (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_regWrite),
    .ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_csrWrite (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_csrWrite),
    .ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_memtoReg (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_memtoReg),
    .ioInternal_hu_lsu_memtoReg                            (__LSU_ioInternal_hu_lsu_memtoReg),
    .ioInternal_hu_lsu_regWrite                            (__LSU_ioInternal_hu_lsu_regWrite),
    .ioInternal_hu_lsu_rd                                  (__LSU_ioInternal_hu_lsu_rd),
    .ioInternal_oForwardData                               (__LSU_ioInternal_oForwardData),
    .ioExternal_Read_AR_m2sARvalid                         (__LSU_ioExternal_Read_AR_m2sARvalid),
    .ioExternal_Read_AR_m2sARaddr                          (__LSU_ioExternal_Read_AR_m2sARaddr),
    .ioExternal_Read_R_m2sRready                           (__LSU_ioExternal_Read_R_m2sRready),
    .ioExternal_AW_m2sAWvalid                              (__LSU_ioExternal_AW_m2sAWvalid),
    .ioExternal_AW_m2sAWaddr                               (__LSU_ioExternal_AW_m2sAWaddr),
    .ioExternal_W_m2sWvalid                                (__LSU_ioExternal_W_m2sWvalid),
    .ioExternal_W_m2sWdata                                 (__LSU_ioExternal_W_m2sWdata),
    .ioExternal_W_m2sWstrb                                 (__LSU_ioExternal_W_m2sWstrb)
  );
  WBU _WBU (	// TopMain.scala:25:26
    .io_ls_wb_IO_readData          (__LS_WB_io_out_readData),	// TopMain.scala:29:28
    .io_ls_wb_IO_exOut             (__LS_WB_io_out_exOut),	// TopMain.scala:29:28
    .io_ls_wb_IO_rd                (__LS_WB_io_out_rd),	// TopMain.scala:29:28
    .io_ls_wb_IO_csrID             (__LS_WB_io_out_csrID),	// TopMain.scala:29:28
    .io_ls_wb_IO_ctrl2WBU_regWrite (__LS_WB_io_out_ctrl2WBU_regWrite),	// TopMain.scala:29:28
    .io_ls_wb_IO_ctrl2WBU_csrWrite (__LS_WB_io_out_ctrl2WBU_csrWrite),	// TopMain.scala:29:28
    .io_ls_wb_IO_ctrl2WBU_memtoReg (__LS_WB_io_out_ctrl2WBU_memtoReg),	// TopMain.scala:29:28
    .io_ls_wb_IO_commit_pc         (__LS_WB_io_out_commit_pc),	// TopMain.scala:29:28
    .io_ls_wb_IO_instr_instr       (__LS_WB_io_out_instr_instr),	// TopMain.scala:29:28
    .io_wbIO_data                  (__WBU_io_wbIO_data),
    .io_wbIO_rd                    (__WBU_io_wbIO_rd),
    .io_wbIO_csrID                 (__WBU_io_wbIO_csrID),
    .io_wbIO_regWrite              (__WBU_io_wbIO_regWrite),
    .io_wbIO_csrWrite              (__WBU_io_wbIO_csrWrite),
    .io_hu_wbu_regWrite            (__WBU_io_hu_wbu_regWrite),
    .io_hu_wbu_rd                  (__WBU_io_hu_wbu_rd),
    .io_commit_pc                  (__WBU_io_commit_pc),
    .io_instr_instr                (__WBU_io_instr_instr)
  );
  IF_ID _IF_ID (	// TopMain.scala:26:28
    .clock              (clock),
    .io_in_instr_instr  (__T_3_ioInternal_Pipeline_IF2ID_MsgBunlde_instr_instr),	// TopMain.scala:21:26
    .io_in_pc_pc        (__T_3_ioInternal_Pipeline_IF2ID_MsgBunlde_pc_pc),	// TopMain.scala:21:26
    .io_clr             (__T_io_pcSrc),	// TopMain.scala:22:26
    .io_en              (~__HU_io_stallD),	// TopMain.scala:20:25, :71:28
    .io_out_instr_instr (__IF_ID_io_out_instr_instr),
    .io_out_pc_pc       (__IF_ID_io_out_pc_pc)
  );
  ID_EX _ID_EX (	// TopMain.scala:27:28
    .clock                    (clock),
    .io_clr                   (__HU_io_flushE),	// TopMain.scala:20:25
    .io_in_pc_pc              (__T_io_id_ex_IO_pc_pc),	// TopMain.scala:22:26
    .io_in_instrRegID_rs1     (__T_io_id_ex_IO_instrRegID_rs1),	// TopMain.scala:22:26
    .io_in_instrRegID_rs2     (__T_io_id_ex_IO_instrRegID_rs2),	// TopMain.scala:22:26
    .io_in_instrRegID_rd      (__T_io_id_ex_IO_instrRegID_rd),	// TopMain.scala:22:26
    .io_in_instrRegImm_imm    (__T_io_id_ex_IO_instrRegImm_imm),	// TopMain.scala:22:26
    .io_in_regData_rd1        (__T_io_id_ex_IO_regData_rd1),	// TopMain.scala:22:26
    .io_in_regData_rd2        (__T_io_id_ex_IO_regData_rd2),	// TopMain.scala:22:26
    .io_in_ctrl2EXU_aluSrcA   (__T_io_id_ex_IO_ctrl2EXU_aluSrcA),	// TopMain.scala:22:26
    .io_in_ctrl2EXU_aluSrcB   (__T_io_id_ex_IO_ctrl2EXU_aluSrcB),	// TopMain.scala:22:26
    .io_in_ctrl2EXU_aluCtrl   (__T_io_id_ex_IO_ctrl2EXU_aluCtrl),	// TopMain.scala:22:26
    .io_in_ctrl2WBU_regWrite  (__T_io_id_ex_IO_ctrl2WBU_regWrite),	// TopMain.scala:22:26
    .io_in_ctrl2WBU_csrWrite  (__T_io_id_ex_IO_ctrl2WBU_csrWrite),	// TopMain.scala:22:26
    .io_in_ctrl2WBU_memtoReg  (__T_io_id_ex_IO_ctrl2WBU_memtoReg),	// TopMain.scala:22:26
    .io_in_ctrl2LSU_memRW     (__T_io_id_ex_IO_ctrl2LSU_memRW),	// TopMain.scala:22:26
    .io_in_ctrl2LSU_memWidth  (__T_io_id_ex_IO_ctrl2LSU_memWidth),	// TopMain.scala:22:26
    .io_in_csrID              (__T_io_id_ex_IO_csrID),	// TopMain.scala:22:26
    .io_in_csrData            (__T_io_id_ex_IO_csrData),	// TopMain.scala:22:26
    .io_in_instr_instr        (__T_io_id_ex_IO_instr_instr),	// TopMain.scala:22:26
    .io_out_pc_pc             (__ID_EX_io_out_pc_pc),
    .io_out_instrRegID_rs1    (__ID_EX_io_out_instrRegID_rs1),
    .io_out_instrRegID_rs2    (__ID_EX_io_out_instrRegID_rs2),
    .io_out_instrRegID_rd     (__ID_EX_io_out_instrRegID_rd),
    .io_out_instrRegImm_imm   (__ID_EX_io_out_instrRegImm_imm),
    .io_out_regData_rd1       (__ID_EX_io_out_regData_rd1),
    .io_out_regData_rd2       (__ID_EX_io_out_regData_rd2),
    .io_out_ctrl2EXU_aluSrcA  (__ID_EX_io_out_ctrl2EXU_aluSrcA),
    .io_out_ctrl2EXU_aluSrcB  (__ID_EX_io_out_ctrl2EXU_aluSrcB),
    .io_out_ctrl2EXU_aluCtrl  (__ID_EX_io_out_ctrl2EXU_aluCtrl),
    .io_out_ctrl2WBU_regWrite (__ID_EX_io_out_ctrl2WBU_regWrite),
    .io_out_ctrl2WBU_csrWrite (__ID_EX_io_out_ctrl2WBU_csrWrite),
    .io_out_ctrl2WBU_memtoReg (__ID_EX_io_out_ctrl2WBU_memtoReg),
    .io_out_ctrl2LSU_memRW    (__ID_EX_io_out_ctrl2LSU_memRW),
    .io_out_ctrl2LSU_memWidth (__ID_EX_io_out_ctrl2LSU_memWidth),
    .io_out_csrID             (__ID_EX_io_out_csrID),
    .io_out_csrData           (__ID_EX_io_out_csrData),
    .io_out_instr_instr       (__ID_EX_io_out_instr_instr)
  );
  EX_LS _EX_LS (	// TopMain.scala:28:28
    .clock                    (clock),
    .io_in_aluOut             (__EXU_io_ex_ls_IO_aluOut),	// TopMain.scala:23:26
    .io_in_writeData          (__EXU_io_ex_ls_IO_writeData),	// TopMain.scala:23:26
    .io_in_rd                 (__EXU_io_ex_ls_IO_rd),	// TopMain.scala:23:26
    .io_in_csrID              (__EXU_io_ex_ls_IO_csrID),	// TopMain.scala:23:26
    .io_in_ctrl2WBU_regWrite  (__EXU_io_ex_ls_IO_ctrl2WBU_regWrite),	// TopMain.scala:23:26
    .io_in_ctrl2WBU_csrWrite  (__EXU_io_ex_ls_IO_ctrl2WBU_csrWrite),	// TopMain.scala:23:26
    .io_in_ctrl2WBU_memtoReg  (__EXU_io_ex_ls_IO_ctrl2WBU_memtoReg),	// TopMain.scala:23:26
    .io_in_ctrl2LSU_memRW     (__EXU_io_ex_ls_IO_ctrl2LSU_memRW),	// TopMain.scala:23:26
    .io_in_ctrl2LSU_memWidth  (__EXU_io_ex_ls_IO_ctrl2LSU_memWidth),	// TopMain.scala:23:26
    .io_in_commit_pc          (__EXU_io_ex_ls_IO_commit_pc),	// TopMain.scala:23:26
    .io_in_instr_instr        (__EXU_io_ex_ls_IO_instr_instr),	// TopMain.scala:23:26
    .io_out_aluOut            (__EX_LS_io_out_aluOut),
    .io_out_writeData         (__EX_LS_io_out_writeData),
    .io_out_rd                (__EX_LS_io_out_rd),
    .io_out_csrID             (__EX_LS_io_out_csrID),
    .io_out_ctrl2WBU_regWrite (__EX_LS_io_out_ctrl2WBU_regWrite),
    .io_out_ctrl2WBU_csrWrite (__EX_LS_io_out_ctrl2WBU_csrWrite),
    .io_out_ctrl2WBU_memtoReg (__EX_LS_io_out_ctrl2WBU_memtoReg),
    .io_out_ctrl2LSU_memRW    (__EX_LS_io_out_ctrl2LSU_memRW),
    .io_out_ctrl2LSU_memWidth (__EX_LS_io_out_ctrl2LSU_memWidth),
    .io_out_commit_pc         (__EX_LS_io_out_commit_pc),
    .io_out_instr_instr       (__EX_LS_io_out_instr_instr)
  );
  LS_WB _LS_WB (	// TopMain.scala:29:28
    .clock                    (clock),
    .io_in_readData           (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_readData),	// TopMain.scala:24:26
    .io_in_exOut              (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_exOut),	// TopMain.scala:24:26
    .io_in_rd                 (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_rd),	// TopMain.scala:24:26
    .io_in_csrID              (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_csrID),	// TopMain.scala:24:26
    .io_in_ctrl2WBU_regWrite  (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_regWrite),	// TopMain.scala:24:26
    .io_in_ctrl2WBU_csrWrite  (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_csrWrite),	// TopMain.scala:24:26
    .io_in_ctrl2WBU_memtoReg  (__LSU_ioInternal_Pipeline_LS2WB_MsgBundle_ctrl2WBU_memtoReg),	// TopMain.scala:24:26
    .io_in_commit_pc          (__EX_LS_io_out_commit_pc),	// TopMain.scala:28:28
    .io_in_instr_instr        (__EX_LS_io_out_instr_instr),	// TopMain.scala:28:28
    .io_out_readData          (__LS_WB_io_out_readData),
    .io_out_exOut             (__LS_WB_io_out_exOut),
    .io_out_rd                (__LS_WB_io_out_rd),
    .io_out_csrID             (__LS_WB_io_out_csrID),
    .io_out_ctrl2WBU_regWrite (__LS_WB_io_out_ctrl2WBU_regWrite),
    .io_out_ctrl2WBU_csrWrite (__LS_WB_io_out_ctrl2WBU_csrWrite),
    .io_out_ctrl2WBU_memtoReg (__LS_WB_io_out_ctrl2WBU_memtoReg),
    .io_out_commit_pc         (__LS_WB_io_out_commit_pc),
    .io_out_instr_instr       (__LS_WB_io_out_instr_instr)
  );
  AXI4_LiteArbiter _Arbiter (	// TopMain.scala:31:30
    .IFU_AR_m2sARvalid   (__T_3_ioExternal_AR_m2sARvalid),	// TopMain.scala:21:26
    .IFU_AR_m2sARaddr    (__T_3_ioExternal_AR_m2sARaddr),	// TopMain.scala:21:26
    .IFU_R_m2sRready     (__T_3_ioExternal_R_m2sRready),	// TopMain.scala:21:26
    .LSU_AR_m2sARvalid   (__LSU_ioExternal_Read_AR_m2sARvalid),	// TopMain.scala:24:26
    .LSU_AR_m2sARaddr    (__LSU_ioExternal_Read_AR_m2sARaddr),	// TopMain.scala:24:26
    .LSU_R_m2sRready     (__LSU_ioExternal_Read_R_m2sRready),	// TopMain.scala:24:26
    .Arbit_R_s2mRvalid   (__TP_SRAM_io_R_s2mRvalid),	// TopMain.scala:32:30
    .Arbit_R_s2mRresp    (__TP_SRAM_io_R_s2mRresp),	// TopMain.scala:32:30
    .Arbit_R_s2mRdata    (__TP_SRAM_io_R_s2mRdata),	// TopMain.scala:32:30
    .IFU_R_s2mRvalid     (__Arbiter_IFU_R_s2mRvalid),
    .IFU_R_s2mRresp      (__Arbiter_IFU_R_s2mRresp),
    .IFU_R_s2mRdata      (__Arbiter_IFU_R_s2mRdata),
    .LSU_R_s2mRvalid     (__Arbiter_LSU_R_s2mRvalid),
    .LSU_R_s2mRdata      (__Arbiter_LSU_R_s2mRdata),
    .Arbit_AR_m2sARvalid (__Arbiter_Arbit_AR_m2sARvalid),
    .Arbit_AR_m2sARaddr  (__Arbiter_Arbit_AR_m2sARaddr),
    .Arbit_R_m2sRready   (__Arbiter_Arbit_R_m2sRready)
  );
  TP_SRAM _TP_SRAM (	// TopMain.scala:32:30
    .clock            (clock),
    .reset            (reset),
    .io_AR_m2sARvalid (__Arbiter_Arbit_AR_m2sARvalid),	// TopMain.scala:31:30
    .io_AR_m2sARaddr  (__Arbiter_Arbit_AR_m2sARaddr),	// TopMain.scala:31:30
    .io_R_m2sRready   (__Arbiter_Arbit_R_m2sRready),	// TopMain.scala:31:30
    .io_AW_m2sAWvalid (__LSU_ioExternal_AW_m2sAWvalid),	// TopMain.scala:24:26
    .io_AW_m2sAWaddr  (__LSU_ioExternal_AW_m2sAWaddr),	// TopMain.scala:24:26
    .io_W_m2sWvalid   (__LSU_ioExternal_W_m2sWvalid),	// TopMain.scala:24:26
    .io_W_m2sWdata    (__LSU_ioExternal_W_m2sWdata),	// TopMain.scala:24:26
    .io_W_m2sWstrb    (__LSU_ioExternal_W_m2sWstrb),	// TopMain.scala:24:26
    .io_R_s2mRvalid   (__TP_SRAM_io_R_s2mRvalid),
    .io_R_s2mRresp    (__TP_SRAM_io_R_s2mRresp),
    .io_R_s2mRdata    (__TP_SRAM_io_R_s2mRdata)
  );
  assign debug_instr_instr = __WBU_io_instr_instr;	// <stdin>:2097:10, TopMain.scala:25:26
  assign debug_commit_pc = __WBU_io_commit_pc;	// <stdin>:2097:10, TopMain.scala:25:26
  assign debug_dynamic_pc = npc;	// <stdin>:2097:10, TopMain.scala:59:22
  assign debug_probe_data = __EX_LS_io_out_aluOut;	// <stdin>:2097:10, TopMain.scala:28:28
  assign debug_alu_data_E_data = __EXU_io_ex_ls_IO_aluOut;	// <stdin>:2097:10, TopMain.scala:23:26
  assign debug_alu_data_W_data = __LS_WB_io_out_exOut;	// <stdin>:2097:10, TopMain.scala:29:28
  assign debug_forwardA_data = __HU_io_hu_exu_forwardCtrl_forwardA;	// <stdin>:2097:10, TopMain.scala:20:25
  assign debug_forwardB_data = __HU_io_hu_exu_forwardCtrl_forwardB;	// <stdin>:2097:10, TopMain.scala:20:25
  assign debug_forward_idu_A_data = __HU_io_hu_idu_forwardCtrl_forwardA;	// <stdin>:2097:10, TopMain.scala:20:25
  assign debug_forward_idu_B_data = __HU_io_hu_idu_forwardCtrl_forwardB;	// <stdin>:2097:10, TopMain.scala:20:25
  assign debug_rdD_data = __T_io_id_ex_IO_instrRegID_rd;	// <stdin>:2097:10, TopMain.scala:22:26
  assign debug_rdE_data = __ID_EX_io_out_instrRegID_rd;	// <stdin>:2097:10, TopMain.scala:27:28
  assign debug_rdM_data = __EX_LS_io_out_rd;	// <stdin>:2097:10, TopMain.scala:28:28
  assign debug_rdW_data = __LS_WB_io_out_rd;	// <stdin>:2097:10, TopMain.scala:29:28
  assign pipelineTrace_if_id_pc_pc = __IF_ID_io_out_pc_pc;	// <stdin>:2097:10, TopMain.scala:26:28
  assign pipelineTrace_if_id_instr_instr = __IF_ID_io_out_instr_instr;	// <stdin>:2097:10, TopMain.scala:26:28
  assign pipelineTrace_if_id_pcEnable = pcEnable_if_id;	// <stdin>:2097:10, TopMain.scala:112:42
  assign pipelineTrace_id_ex_pc_pc = __ID_EX_io_out_pc_pc;	// <stdin>:2097:10, TopMain.scala:27:28
  assign pipelineTrace_id_ex_instr_instr = __ID_EX_io_out_instr_instr;	// <stdin>:2097:10, TopMain.scala:27:28
  assign pipelineTrace_id_ex_pcEnable = pcEnable_id_ex;	// <stdin>:2097:10, TopMain.scala:113:42
  assign pipelineTrace_ex_ls_pc_pc = __EX_LS_io_out_commit_pc;	// <stdin>:2097:10, TopMain.scala:28:28
  assign pipelineTrace_ex_ls_instr_instr = __EX_LS_io_out_instr_instr;	// <stdin>:2097:10, TopMain.scala:28:28
  assign pipelineTrace_ex_ls_pcEnable = pcEnable_ex_ls;	// <stdin>:2097:10, TopMain.scala:114:42
  assign pipelineTrace_ls_wb_pc_pc = __LS_WB_io_out_commit_pc;	// <stdin>:2097:10, TopMain.scala:29:28
  assign pipelineTrace_ls_wb_instr_instr = __LS_WB_io_out_instr_instr;	// <stdin>:2097:10, TopMain.scala:29:28
  assign pipelineTrace_ls_wb_pcEnable = pcEnable_ls_wb;	// <stdin>:2097:10, TopMain.scala:115:42
  assign pipelineTrace_rf_pc_pc = pc_rf_pc;	// <stdin>:2097:10, TopMain.scala:110:34
  assign pipelineTrace_rf_instr_instr = instr_rf_instr;	// <stdin>:2097:10, TopMain.scala:111:34
  assign pipelineTrace_rf_pcEnable = pcEnable_rf;	// <stdin>:2097:10, TopMain.scala:116:42
  assign jumpTrace_dynamic_pc = npc;	// <stdin>:2097:10, TopMain.scala:59:22
  assign jumpTrace_instr_jump = __T_io_instr_jump[0];	// <stdin>:2097:10, TopMain.scala:22:26, :135:37
  assign jumpTrace_idu_pcSrc = __T_io_pcSrc;	// <stdin>:2097:10, TopMain.scala:22:26
endmodule

